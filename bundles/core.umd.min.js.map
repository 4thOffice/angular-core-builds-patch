{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponent","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","nodeIndex","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","elementDepthCount","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","loadInternal","getComponentViewByIndex","hostView","slotValue","readPatchedData","readPatchedLView","resetPreOrderHookFlags","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","getIsParent","setIsNotParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","safeToRunHooks","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isDifferent","a","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","Function","RendererStyleFlags3","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","compareValueA","compareValueB","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","prop","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshDescendantViews","staticContentQueries","refreshContentQueries","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","renderEmbeddedTemplate","setHostBindings","viewData","selectedIndex","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","staticViewQueries","executeViewQueryFn","refreshChildComponents","hostLView","componentRefresh","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","host","tHostNode","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","directiveRegistry","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","adjustedElementIndex","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","lViewOrLContainer","markViewDirty","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","executeActionOnElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeInsertBefore","nativeRemoveNode","destroyNode","executeActionOnContainer","renderParent","anchor","executeActionOnView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","isIcuCase","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNodes","tProjectionNode","selectorIndex","projectedView","nodeToProject","appendProjectedNode","appendProjectedChildren","ngContainerChildTNode","projectionView","projectedTNode","nodeOrContainer","viewRootTNode","executeActionOnNode","executeActionOnElementContainerOrIcuContainer","executeActionOnProjection","componentLView","projectionTNode","projectedComponentLView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","embeddedTView","createEmbeddedViewAndNode","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","processProvider","set","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","multiProviderMixError","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","LocaleDataIndex","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","e_3","e_3_1","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","e_4","lViewResults","e_4_1","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵloadViewQuery","loadQueryInternal","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadContentQuery","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_b","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bm","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.0+38.sha-a574e46.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        if (checkHooks !== null || firstPassHooks !== null) {\n            var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n                firstPassHooks :\n                checkHooks;\n            if (hooksToCall !== null) {\n                callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n            }\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        var flags = currentView[FLAGS];\n        if (currentNodeIndex == null && (flags & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            currentView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        var index = tNode.index;\n        var node = index == -1 ? null : unwrapRNode(lView[index]);\n        ngDevMode && node !== null && assertDomNode(node);\n        return node;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex === null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param safeToRunHooks Whether the runtime is in a state where running lifecycle hooks is valid.\n     * This is not always the case (for example, the application may have crashed and `leaveView` is\n     * being executed while unwinding the call stack).\n     */\n    function leaveView(newView, safeToRunHooks) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                safeToRunHooks && executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$2 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$2)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return isDifferent(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$3 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$3\n    };\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    queries: null,\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        selectInternal(lView, index);\n    }\n    function selectInternal(lView, index) {\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        if (!creationMode) {\n            // Resetting the bindingIndex of the current LView as the next steps may trigger change\n            // detection.\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        else {\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            tView.firstTemplatePass = false;\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n        }\n        // We must materialize query results before child components are processed\n        // in case a child component has projected a container. The LContainer needs\n        // to exist so the embedded views are properly attached by the container.\n        if (!creationMode || tView.staticViewQueries) {\n            executeViewQueryFn(2 /* Update */, tView, lView[CONTEXT]);\n        }\n        var components = tView.components;\n        if (components !== null) {\n            refreshChildComponents(lView, components);\n        }\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            componentRefresh(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setPreviousOrParentTNode(null, true);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor\n     * inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            // Will become true if the `try` block executes with no errors.\n            var safeToRunHooks = false;\n            try {\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(viewToRender, tView.template, getRenderFlags(viewToRender), context);\n                refreshDescendantViews(viewToRender);\n                safeToRunHooks = true;\n            }\n            finally {\n                leaveView(oldView, safeToRunHooks);\n                setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(hostView, templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(hostView, templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0);\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 4 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 1 /* isComponent */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[hostTNode.index], hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = hostTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    // The directives and pipes are not needed here as an existing view is only being\n                    // refreshed.\n                    ngDevMode && assertDefined(embeddedLView[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(embeddedLView, embeddedLView[TVIEW], embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(hostLView, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(hostLView, adjustedElementIndex);\n        var componentView = getComponentViewByIndex(adjustedElementIndex, hostLView);\n        ngDevMode &&\n            assertNodeType(hostLView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(componentView) || isCreationMode(hostLView)) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(componentView);\n            checkView(componentView, componentView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n     */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(hostView, templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery !== null) {\n            setCurrentQueryIndex(0);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeActionOnElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped\n            // in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Insert */) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 1 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 2 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                executeActionOnContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 0 /* Insert */ : 1 /* Detach */;\n            executeActionOnView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        executeActionOnView(lView[RENDERER], 1 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                executeActionOnView(renderer, 2 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode);\n        var renderParent = parent.parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (renderParent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n            if (isIcuCase && parent.flags & 2 /* isProjected */) {\n                return getNativeByTNode(parent, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n            if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[renderParent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(renderParent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_1, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target LView)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                    if (nodeToProject.type === 1 /* Projection */) {\n                        appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                    }\n                    else {\n                        // This flag must be set now or we won't know that this node is projected\n                        // if the nodes are inserted into a container later.\n                        nodeToProject.flags |= 2 /* isProjected */;\n                        appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                    }\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Loops over all children of a TNode container and appends them to the DOM\n     *\n     * @param ngContainerChildTNode The first child of the TNode container\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedChildren(ngContainerChildTNode, tProjectionNode, currentView, projectionView) {\n        while (ngContainerChildTNode) {\n            appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n            ngContainerChildTNode = ngContainerChildTNode.next;\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else if (projectedTNode.type === 5 /* IcuContainer */) {\n            // The node we are adding is an ICU container which is why we also need to project all the\n            // children nodes that might have been created previously and are linked to this anchor\n            var ngContainerChildTNode = projectedTNode.child;\n            appendProjectedChildren(ngContainerChildTNode, ngContainerChildTNode, projectionView, projectionView);\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                appendProjectedChildren(projectedTNode.child, tProjectionNode, currentView, projectionView);\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n    /**\n     * `executeActionOnView` performs an operation on the view as specified in `action` (insert, detach,\n     * destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. While the recursive implementation is not the\n     * most efficient one, trying to unroll the nodes non-recursively results in very complex code that\n     * is very hard (to maintain). We are sacrificing a bit of performance for readability using a\n     * recursive implementation.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        while (viewRootTNode !== null) {\n            executeActionOnNode(renderer, action, lView, viewRootTNode, renderParent, beforeNode);\n            viewRootTNode = viewRootTNode.next;\n        }\n    }\n    /**\n     * `executeActionOnProjection` performs an operation on the projection specified by `action`\n     * (insert, detach, destroy).\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode projection TNode to process\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnProjection(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode && assertDefined(componentNode.projection, 'Element nodes for which projection is processed must have projection defined.');\n        var nodeToProject = componentNode.projection[tProjectionNode.projection];\n        if (nodeToProject !== undefined) {\n            if (Array.isArray(nodeToProject)) {\n                for (var i = 0; i < nodeToProject.length; i++) {\n                    var rNode = nodeToProject[i];\n                    ngDevMode && assertDomNode(rNode);\n                    executeActionOnElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n                }\n            }\n            else {\n                var projectionTNode = nodeToProject;\n                var projectedComponentLView = componentLView[PARENT];\n                while (projectionTNode !== null) {\n                    executeActionOnNode(renderer, action, projectedComponentLView, projectionTNode, renderParent, beforeNode);\n                    projectionTNode = projectionTNode.projectionNext;\n                }\n            }\n        }\n    }\n    /**\n     * `executeActionOnContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeNodeAction)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            executeActionOnElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            executeActionOnView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n    /**\n     * `executeActionOnElementContainerOrIcuContainer` performs an operation on the ng-container node\n     * and its child nodes as specified by the `action` (insert, detach, destroy).\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tNode The TNode associated with the `ElementContainer` or `IcuContainer`.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var node = lView[tNode.index];\n        executeActionOnElementOrContainer(action, renderer, renderParent, node, beforeNode);\n        var childTNode = tNode.child;\n        while (childTNode) {\n            executeActionOnNode(renderer, action, lView, childTNode, renderParent, beforeNode);\n            childTNode = childTNode.next;\n        }\n    }\n    function executeActionOnNode(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var nodeType = tNode.type;\n        if (!(tNode.flags & 32 /* isDetached */)) {\n            if (nodeType === 4 /* ElementContainer */ || nodeType === 5 /* IcuContainer */) {\n                executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else if (nodeType === 1 /* Projection */) {\n                executeActionOnProjection(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                executeActionOnElementOrContainer(action, renderer, renderParent, lView[tNode.index], beforeNode);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createEmbeddedViewAndNode(embeddedTView, context, this._declarationView, this._declarationTContainer.injectorIndex);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderEmbeddedTemplate(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponent(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$5 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$5 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$7);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$8 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$8, Query);\n    var ɵ1$1 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$1, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name);\n        var renderer = lView[RENDERER];\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        attachPatchData(native, lView);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        // It's always safe to run hooks here, as `leaveView` is not called during the 'finally' block\n        // of a try-catch-finally statement, so it can never be reached while unwinding the stack due to\n        // an error being thrown.\n        leaveView(lContainer[PARENT], /* safeToRunHooks */ true);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(numProjectionSlots).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = (e_1 = void 0, __values(features)), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.0+38.sha-a574e46.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef));\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            // Will become true if the `try` block executes with no errors.\n            var safeToRunHooks = false;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootLView);\n                safeToRunHooks = true;\n            }\n            finally {\n                leaveView(oldLView, safeToRunHooks);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            var tProjectionNode = tNode;\n            appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        // Define this node as detached so that we don't risk projecting it\n        removedPhTNode.flags |= 32 /* isDetached */;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = new Array(noOfInheritedQueries);\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries[i] = parentLQuery.clone();\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            var e_1, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementStart(tView, tNode);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            var e_2, _a;\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementEnd(tNode);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            var e_3, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.template(tView, tNode);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = new Array(tQueryMatches.length / 2);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result[i / 2] = null;\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result[i / 2] =\n                        createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read);\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var e_4, _a;\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        try {\n                            for (var _b = (e_4 = void 0, __values(declarationLContainer[MOVED_VIEWS])), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                var embeddedLView = _c.value;\n                                collectQueryResults(embeddedLView, childQueryIndex, result);\n                            }\n                        }\n                        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                        finally {\n                            try {\n                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                            }\n                            finally { if (e_4) throw e_4.error; }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode() === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$9 = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$9)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$a = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$2 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$a, undefined, undefined, ɵ1$2);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (ngModule) { return ngModule; }, ɵ1$3 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$b, undefined, undefined, ɵ1$3);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_bn = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bm = noSideEffects;\n    exports.ɵangular_packages_core_core_bi = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bj = makePropDecorator;\n    exports.ɵangular_packages_core_core_bk = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}