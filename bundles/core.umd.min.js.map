{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","ACTIVE_INDEX","HOST_NATIVE","NATIVE","VIEWS","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","getContext","mpValue","readPatchedData","lViewData","nodeIndex","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","tNode","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","lNode","getLNodeFromViewData","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","lNodeIndex","localRefs","getLElementFromComponent","componentInstance","readElementValue","readPatchedLViewData","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tagName","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","getLNode","hostView","isContentQueryHost","isLContainer","getRootView","getParentLNode","getHostElementNode","hostTNode","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","view","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","viewData","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentLNode","parentEl","parentTNode","renderParent","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","createEmptyStylingContext","element","sanitizer","initialStylingValues","getOrCreatePlayerContext","stylingContext","allocPlayerContext","allocStylingContext","lElement","templateStyleContext","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","ROOT_EXPANDO_INSTRUCTIONS","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","blueprint","createNodeAtIndex","parentInSameView","tParent","isState","createLNodeObject","createTNode","tData","tNode_1","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","generateExpandoBlock","totalHostVars","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","instantiateDirectivesDirectly","clone","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","directiveCount","elementIndex","NO_CHANGE","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","listener","eventName","listenerFn","useCapture","getPreviousOrParentNode","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","getTNode","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","enableBindings","disableBindings","tViews","injectorIndex","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","slotValue","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNative","textBinding","existingNode","textContent","directive","hostNode","baseDirectiveCreate","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","queueHostBindingForCheck","dirIndex","createLContainer","hostLNode","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","rootContext","nothingScheduled","scheduleTick","res_1","clean","scheduler","playerHandler","flushPlayers","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadQueryList","queryListIdx","load","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","createRootComponent","elementNode","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","setUpBloom","parentLoc","getParentInjectorLocation","parentIndex","getParentInjectorView","parentData","bloomIndex","footer","viewOffset","location","startView","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","getOrCreateNodeInjector","directiveInject","getOrCreateInjectable","injectAttribute","attrNameToInject","bloomHash","bloomHashBitOrFactory","tokenId","startInjectorIndex","injectorView","parentLocation","shouldNotSearchParent","injectorHasToken","searchDirectivesOnInjector","searchMatchesQueuedForCreation","formerInjector","nodeFlags","NodeInjector","_tNode","_hostView","_injectorIndex","setEnvironment","getFactoryOf","typeAny","getInheritedFactory","PublicFeature","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","RendererStyleFlags2","R3_ELEMENT_REF_FACTORY","injectElementRef","R3_TEMPLATE_REF_FACTORY","injectTemplateRef","R3_CHANGE_DETECTOR_REF_FACTORY","injectChangeDetectorRef","createViewRef","isComponent","componentIndex","hostComponentView","R3_VIEW_CONTAINER_REF_FACTORY","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","clear","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","destroyed","move","newIndex","shift","R3_RENDERER2_FACTORY","injectRenderer2","getOrCreateRenderer2","ElementRef","nativeElement","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","wrapper","rootFlags","tElementNode","componentTag","projection$$1","nodeList","firstTNode","previousTNode","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedNode","removedTNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","factoryFn","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","directiveMetadata","metadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","R3_COMPILE_COMPONENT","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","R3_COMPILE_DIRECTIVE","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","compilePipe","compilePipeFromMetadata","R3_COMPILE_NGMODULE_DEFS","R3_PATCH_COMPONENT_DEF_WTIH_SCOPE","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","ChangeDetectorRef","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","loadContext","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","CorePlayerHandler","_players","player","play","queuePlayer","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","R3_ELEMENT_REF_FACTORY__POST_NGCC__","R3_TEMPLATE_REF_FACTORY__POST_NGCC__","R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","R3_RENDERER2_FACTORY__POST_NGCC__","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$1","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµaddPlayer","addPlayer","elementContext","animationContext","getRootContext","viewOrComponent","ÉµgetPlayers","getPlayers","ÉµcompileNgModuleFactory__POST_NGCC__","compileNgModuleFactory__POST_NGCC__","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__","ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__","ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","ÉµR3_RENDERER2_FACTORY__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-rc.1+37.sha-a19b690\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 16;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER = 10;\n    var SANITIZER = 11;\n    var TAIL = 12;\n    var CONTAINER_INDEX = 13;\n    var CONTENT_QUERIES = 14;\n    var DECLARATION_VIEW = 15;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var HOST_NATIVE = 4;\n    var NATIVE = 5;\n    var VIEWS = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, nodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: lNodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * A simplified lookup function for finding the LElementNode from a component instance.\n     *\n     * This function exists for tree-shaking purposes to avoid having to pull in everything\n     * that `getContext` has in the event that an Angular application doesn't need to have\n     * any programmatic access to an element's context (only change detection uses this function).\n     */\n    function getLElementFromComponent(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var lNode;\n        if (Array.isArray(lViewData)) {\n            var lNodeIndex = findViaComponent(lViewData, componentInstance);\n            lNode = readElementValue(lViewData[lNodeIndex]);\n            var context = createLContext(lViewData, lNodeIndex, lNode.native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            lNode = readElementValue(context.lViewData[context.nodeIndex]);\n        }\n        return lNode;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var lNodeData = readElementValue(lViewData[elementComponentIndex]).data;\n                if (lNodeData[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootNode = lViewData[HEADER_OFFSET];\n            var rootComponent = rootNode.data[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, lNodeIndex) {\n        var tNode = lViewData[TVIEW].data[lNodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] = directiveIndex === -1 ?\n                    getLNodeFromViewData(lViewData, lNodeIndex).native :\n                    lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        if (Array.isArray(value)) {\n            if (typeof value[ACTIVE_INDEX] === 'number') {\n                // This is an LContainer. It may also have a styling context.\n                value = value[HOST_NATIVE];\n                return Array.isArray(value) ? value[0 /* ElementPosition */] : value;\n            }\n            else {\n                // This is a StylingContext, which stores the element node at 0.\n                return value[0 /* ElementPosition */];\n            }\n        }\n        else {\n            return value; // Regular LNode is stored here\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function getLNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent LNode of a given node. */\n    function getParentLNode(tNode, currentView) {\n        return tNode.parent == null ? getHostElementNode(currentView) :\n            getLNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host LElementNode given a view. Will return null if the host element is an\n     * LViewNode, since they are being phased out.\n     */\n    function getHostElementNode(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getLNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                var elementNode = getLNode(tNode, currentView);\n                executeNodeAction(action, renderer, parent_1, elementNode.native, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, parent_1, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainer[NATIVE], beforeNode);\n                if (renderParentNode)\n                    lContainer[RENDER_PARENT] = renderParentNode;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var parentNode = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        if (childIndex === -1)\n            return null;\n        var value = viewData[childIndex];\n        // If it's an array, it's an LContainer. Otherwise, it's a component node, so LViewData\n        // is stored in data.\n        return Array.isArray(value) ? value : value.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentLNode(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var parentLNode = getParentLNode(childTNode, currentView);\n        var parentEl = parentLNode ? parentLNode.native : null;\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var renderParent = lContainer[RENDER_PARENT];\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent.native, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var node = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, node.native, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getLNode(viewTNode.child, view).native : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parentEl The parent element from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(tNode, child, currentView) {\n        var parentNative = getParentLNode(tNode, currentView).native;\n        if (child !== null && canInsertNativeNode(tNode, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, child) :\n                parentNative.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getLNode(projectedTNode, projectionView).native;\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            element || null, null, sanitizer || null, initialStylingValues || [null], 0, 0, null, null\n        ];\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (ngDevMode && !context) {\n            throw new Error('Only elements that exist in an Angular application can be used for player access');\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var value = lViewData[nodeIndex];\n        var stylingContext = value;\n        if (!Array.isArray(value)) {\n            stylingContext = lViewData[nodeIndex] = createEmptyStylingContext(value);\n        }\n        return stylingContext[1 /* PlayerContext */] || allocPlayerContext(stylingContext);\n    }\n    function allocPlayerContext(data) {\n        return data[1 /* PlayerContext */] = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[5 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 4 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        styles = styles || null;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = classes === context[6 /* PreviousMultiClassValue */];\n        var ignoreAllStyleUpdates = styles === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            context[6 /* PreviousMultiClassValue */] = classes;\n            if (typeof classes == 'string') {\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            }\n        }\n        classes = (classes || EMPTY_OBJ);\n        if (!ignoreAllStyleUpdates) {\n            context[7 /* PreviousMultiStyleValue */] = styles;\n        }\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                context.push(flag, prop, value);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[5 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[3 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[4 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[2 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 4 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 4 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 4 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 4 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentNode() {\n        return previousOrParentTNode == null || previousOrParentTNode === viewData[HOST_NODE] ?\n            getHostElementNode(viewData) :\n            getLNode(previousOrParentTNode, viewData);\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setEnvironment(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        setHostBindings();\n        var parentFirstTemplatePass = firstTemplatePass;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings() {\n        if (tView.expandoInstructions) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        if (typeof viewData[bindingRootIndex] === 'number') {\n                            // We've hit an injector. It may or may not exist depending on whether\n                            // there is a public directive on this node.\n                            bindingRootIndex += INJECTOR_SIZE;\n                        }\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, native, state) {\n        return { native: native, data: state };\n    }\n    function createNodeAtIndex(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, native, isState ? state : null);\n        var tNode;\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in tView.node.\n            tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode_1 = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode_1;\n                }\n            }\n            tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = tNode;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = tNode;\n            }\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createNodeAtIndex(-1, 2 /* View */, null, null, null, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings();\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(tNode, currentView) {\n        return getLNode(tNode, currentView).native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (!bindingsEnabled)\n            return;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        generateExpandoBlock(tNode, matches);\n        var totalHostVars = 0;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(totalHostVars);\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoBlock(tNode, matches) {\n        var directiveCount = matches ? matches.length / 2 : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        if (directiveCount > 0) {\n            (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            return directiveCreate(matches[valueIndex] = viewData.length, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, def) {\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            if (def.diPublic)\n                def.diPublic(def);\n            tNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n        return viewData[HEADER_OFFSET];\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var node = getPreviousOrParentNode();\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(node.native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                node.native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = getTNode(index);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            if (tNode.type === 3 /* Element */)\n                markDirtyIfOnPush(node);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: parent ? parent.injectorIndex : -1,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var slotValue = viewData[index + HEADER_OFFSET];\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            slotValue = lContainer[HOST_NATIVE];\n            if (!Array.isArray(slotValue)) {\n                return lContainer[HOST_NATIVE] =\n                    allocStylingContext(slotValue, getTNode(index).stylingTemplate);\n            }\n        }\n        else if (!Array.isArray(slotValue)) {\n            // This is a regular ElementNode\n            return viewData[index + HEADER_OFFSET] =\n                allocStylingContext(slotValue, getTNode(index).stylingTemplate);\n        }\n        return slotValue;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, hostNode);\n        if (directiveDef.template) {\n            hostNode.data[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(hostNode.native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        hostNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentTNode;\n        if (firstTemplatePass) {\n            queueComponentIndexForCheck();\n            previousOrParentTNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, hostNode) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (hostNode) {\n            attachPatchData(hostNode.native, viewData);\n        }\n        viewData[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if (flags === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n            tView.data.push(directiveDef);\n            tView.blueprint.push(null);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index, directiveDef);\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(hostNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostLNode The host node for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostLNode, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            hostLNode,\n            native,\n            [],\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs, null);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = viewData[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createNodeAtIndex(viewBlockId, 2 /* View */, null, null, null, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = readElementValue(viewData[adjustedElementIndex]);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= 1 /* DetectChanges */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = getLElementFromComponent(component);\n        ngDevMode &&\n            assertDefined(hostNode, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var elementNode = getLElementFromComponent(component);\n        markViewDirty(elementNode.data);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    function getTNode(index) {\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = viewData.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            component = createRootComponent(elementNode, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(elementNode.data, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(elementNode, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at next index in viewData\n        var component = baseDirectiveCreate(rootView.length, componentDef.factory(), componentDef, elementNode);\n        rootContext.components.push(component);\n        elementNode.data[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (rootView[TVIEW].firstTemplatePass)\n            prefillHostVars(componentDef.hostVars);\n        setHostBindings();\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 15 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        if (tView.firstTemplatePass) {\n            var id = type[NG_ELEMENT_ID];\n            // Set a unique ID on the directive type, so if something tries to inject the directive,\n            // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n            if (id == null) {\n                id = type[NG_ELEMENT_ID] = nextNgElementId++;\n            }\n            // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n            // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n            var bloomBit = id & BLOOM_MASK;\n            // Create a mask that targets the specific bit associated with the directive.\n            // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n            // to bit positions 0 - 31 in a 32 bit integer.\n            var mask = 1 << bloomBit;\n            // Use the raw bloomBit number to determine which bloom filter bucket we should check\n            // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n            var b7 = bloomBit & 0x80;\n            var b6 = bloomBit & 0x40;\n            var b5 = bloomBit & 0x20;\n            var tData = tView.data;\n            if (b7) {\n                b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n            }\n            else {\n                b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n            }\n        }\n    }\n    function getOrCreateNodeInjector() {\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            setUpBloom(tView.data, tNode); // foundation for node bloom\n            setUpBloom(hostView, null); // foundation for cumulative bloom\n            setUpBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = parentLoc & 32767 /* InjectorIndexMask */;\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var parentData = parentView[TVIEW].data;\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (parentLoc !== -1) {\n            for (var i = 0; i < PARENT_INJECTOR; i++) {\n                var bloomIndex = parentIndex + i;\n                // Creates a cumulative bloom filter that merges the parent's bloom filter\n                // and its own cumulative bloom (which contains tokens for all ancestors)\n                hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function setUpBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = location >> 15 /* ViewOffsetShift */;\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, def) {\n        bloomAdd(injectorIndex, view[TVIEW], def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var hostTNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(hostTNode, _getViewData(), token, flags);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(hostTNode, hostView, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function')\n            return bloomHash();\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash != null) {\n            var startInjectorIndex = getInjectorIndex(hostTNode, hostView);\n            var injectorIndex = startInjectorIndex;\n            var injectorView = hostView;\n            var parentLocation = -1;\n            // If we should skip this injector or if an injector doesn't exist on this node (e.g. all\n            // directives on this node are private), start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */ || injectorIndex === -1) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(hostTNode, hostView) :\n                    injectorView[injectorIndex + PARENT_INJECTOR];\n                if (shouldNotSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                    injectorView = getParentInjectorView(parentLocation, injectorView);\n                }\n            }\n            while (injectorIndex !== -1) {\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n                while (injectorIndex !== -1) {\n                    // Check the current injector. If it matches, stop searching for an injector.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n                        break;\n                    }\n                    parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                    if (shouldNotSearchParent(flags, parentLocation)) {\n                        injectorIndex = -1;\n                        break;\n                    }\n                    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n                    // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n                    // can abort.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n                        injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        injectorView = getParentInjectorView(parentLocation, injectorView);\n                    }\n                    else {\n                        injectorIndex = -1;\n                        break;\n                    }\n                }\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (injectorIndex === -1) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var instance = void 0;\n                if (instance = searchDirectivesOnInjector(injectorIndex, injectorView, token)) {\n                    return instance;\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n        }\n        var moduleInjector = hostView[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches);\n                }\n            }\n        }\n        return null;\n    }\n    function searchDirectivesOnInjector(injectorIndex, injectorView, token) {\n        var tNode = injectorView[TVIEW].data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var count = nodeFlags & 4095 /* DirectiveCountMask */;\n        if (count !== 0) {\n            var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var defs = injectorView[TVIEW].data;\n            for (var i = start; i < end; i++) {\n                // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                // and matches the given token, return the directive instance.\n                var directiveDef = defs[i];\n                if (directiveDef.type === token && directiveDef.diPublic) {\n                    return injectorView[i];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function injectorHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldNotSearchParent(flags, parentLocation) {\n        return flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && (parentLocation >> 15 /* ViewOffsetShift */) > 0);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setEnvironment(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getLNode(tNode, view).native);\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        var parentTNode = parentView[TVIEW].data[parentIndex];\n                        return parentLocation === -1 ? new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getLNode(hostTNode, hostView).data;\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(_getViewData());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY = injectElementRef;\n    var R3_TEMPLATE_REF_FACTORY = injectTemplateRef;\n    var R3_CHANGE_DETECTOR_REF_FACTORY = injectChangeDetectorRef;\n    var R3_VIEW_CONTAINER_REF_FACTORY = injectViewContainerRef;\n    var R3_RENDERER2_FACTORY = injectRenderer2;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return R3_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return R3_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                tElementNode = getTNode(0);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(elementNode, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                var componentView = elementNode.data;\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createNodeAtIndex(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        var native = getLNode(tNode, viewData).native;\n        appendChild(native, tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedNode = loadElement(removeIndex);\n                    var removedTNode = getTNode(removeIndex);\n                    removeChild(removedTNode, removedNode.native || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return R3_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n    var R3_COMPILE_NGMODULE_DEFS = compileNgModuleDefs;\n    var R3_PATCH_COMPONENT_DEF_WTIH_SCOPE = patchComponentDefWithScope;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-rc.1+37.sha-a19b690');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_NGCC__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return R3_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return R3_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (this.createDebugContext(el));\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var lNode = context.lViewData[context.nodeIndex];\n            return lNode.data[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lViewData);\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function addPlayer(ref, player) {\n        var elementContext = getContext(ref);\n        var animationContext = getOrCreatePlayerContext(elementContext.native, elementContext);\n        animationContext.push(player);\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = animationContext.indexOf(player);\n            if (index >= 0) {\n                animationContext.splice(index, 1);\n            }\n            player.destroy();\n        });\n        var rootContext = getRootContext(elementContext.lViewData);\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        // change detection may or may not happen therefore\n        // the core code needs to be kicked off to flush the animations\n        rootContext.flags |= 2 /* FlushPlayers */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    function getPlayers(ref) {\n        return getOrCreatePlayerContext(ref);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY;\n    var R3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY;\n    var R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY;\n    var R3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = R3_COMPILE_NGMODULE_DEFS;\n    exports.ÉµpatchComponentDefWithScope = R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n    exports.ÉµcompileComponent = R3_COMPILE_COMPONENT;\n    exports.ÉµcompileDirective = R3_COMPILE_DIRECTIVE;\n    exports.ÉµcompilePipe = R3_COMPILE_PIPE;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_NGCC__ = compileNgModuleFactory__POST_NGCC__;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}