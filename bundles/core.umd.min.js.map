{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getCreationMode","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","canAccessViewProviders","node","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","startInjectables","startDirectives","directiveCount","providerTokenOrDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_lView","_injectorIndex","previousTNode","previousLView","getFactoryOf","typeAny","getInheritedFactory","getContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","directiveEndIndex","slice","startIndex","count","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","getCleanup","getTViewCleanup","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","directive","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","elementStylingApply","hackImplementationOfElementStyling","hackSquashDeclaration","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","hackImplementationOfElementStyleProp","valueToAdd","elementStylingMap","classes","hackImplementationOfElementStylingMap","initialClasses","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","result","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","_hostView","createViewRef","componentIndex","hostComponentView","getComponent","Node","loadContext","getComponentAtNodeIndex","getViewComponent","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","hostRNode","rootFlags","rootViewInjector","createChainedInjector","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","notImplemented","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","event","createEvent","initEvent","dispatchEvent","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_s","ɵangular_packages_core_core_u","ɵangular_packages_core_core_t","ɵangular_packages_core_core_x","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0+85.sha-64a3461\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            creationMode = (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        var tView = lView[TVIEW];\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        lView[FLAGS] |= 16 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var injectableIdx = locateDirectiveOrProvider(tNode, injectorView, token, canAccessViewProviders);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, injectorView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders) {\n        var tView = lView[TVIEW];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _lView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            var previousTNode = getPreviousOrParentTNode();\n            var previousLView = getLView();\n            setTNodeAndViewData(this._tNode, this._lView);\n            try {\n                return getOrCreateInjectable(this._tNode, this._lView, token);\n            }\n            finally {\n                setTNodeAndViewData(previousTNode, previousLView);\n            }\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        return tNode.flags & 4096 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[PARENT], 'lView.parent');\n            lView = lView[PARENT];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var cleanup = lView[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(lView[cleanup[i + 1]]);\n                    var listener = lView[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lView[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lView[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName || current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView, rf) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(lView, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], rf);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 2 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(lView, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(lView);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(lView).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(lView, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(lView, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, outputs[i]);\n            var subscription = lView[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(lView, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        getCleanup(lView).push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lView[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getLView()[TVIEW]);\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode && tNode.type === 3 /* Element */) {\n                setNgReflectProperties(lView, element, propName, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, propName, value) {\n        var renderer = lView[RENDERER];\n        var attrName = normalizeDebugBindingName(propName);\n        var debugValue = normalizeDebugBindingValue(value);\n        isProceduralRenderer(renderer) ? renderer.setAttribute(element, attrName, debugValue) :\n            element.setAttribute(attrName, debugValue);\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getLView()[TVIEW];\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getLView()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        if (directive != undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var lView = getLView();\n                var stylingContext = getStylingContext(index, lView);\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(lView, tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n        }\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, lView), lView[RENDERER], lView, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive); // supported in next PR\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getLView()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index, lView);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getLView());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = new Map()));\n        hostStylingHackMap.set(directive, {\n            classDeclarations: hackSquashDeclaration(classDeclarations),\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        });\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directive) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + (previousOrParentTNode.flags & 4095 /* DirectiveCountMask */);\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        if (def.hostBindings) {\n            def.hostBindings(1 /* Create */, directive, previousOrParentTNode.index);\n        }\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings || noop);\n        if (def.hostVars)\n            tView.expandoInstructions.push(def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(lView, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        refreshDescendantViews(lView, null);\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     * @param rf  The render flags that should be used to process this template\n     */\n    function componentRefresh(adjustedElementIndex, rf) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 2 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView[FLAGS] |= 4 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef && viewAttached(this._lView)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = this._lView[RENDERER_FACTORY];\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, exports.InjectFlags.Default, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved for.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadContext(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lView = Array.isArray(target) ? target : loadContext(target).lView;\n        var rootLView = getRootView$1(lView);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lView);\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getContext(directive).native;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                        definition.hostVars += superDef.hostVars;\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null && !isDuplicate) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, lView), lView, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0+85.sha-64a3461');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            var sanitizer = null;\n            if (ngModule) {\n                rendererFactory = ngModule.injector.get(RendererFactory2);\n                sanitizer = ngModule.injector.get(Sanitizer, null);\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootLView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldLView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return getCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: [], pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    function notImplemented() {\n        throw new Error('Missing proper ivy implementation.');\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                // TODO: add real implementation;\n                // https://angular-team.atlassian.net/browse/FW-719\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () {\n                // TODO move to discoverable utils\n                var context = loadContext(this.nativeNode, false);\n                if (!context)\n                    return [];\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var providerTokens = [];\n                var nodeFlags = tNode.flags;\n                var startIndex = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n                var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n                var endIndex = startIndex + directiveCount;\n                for (var i = startIndex; i < endIndex; i++) {\n                    var value = tView.data[i];\n                    if (isDirectiveDefHack(value)) {\n                        // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                        // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                        // is that for Components/Directives we store the def instead the type. The correct behavior\n                        // is that we should always be storing injectable type in this location.\n                        value = value.type;\n                    }\n                    providerTokens.push(value);\n                }\n                return providerTokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            // This is a hack implementation. The correct implementation would bypass the DOM and `TNode`\n            // information to invoke the listeners directly.\n            // https://angular-team.atlassian.net/browse/FW-719\n            var event = document.createEvent('MouseEvent');\n            event.initEvent(eventName, true, true);\n            this.nativeElement.dispatchEvent(event);\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_s = wtfEnabled;\n    exports.ɵangular_packages_core_core_u = createScope;\n    exports.ɵangular_packages_core_core_t = detectWTF;\n    exports.ɵangular_packages_core_core_x = endTimeRange;\n    exports.ɵangular_packages_core_core_v = leave;\n    exports.ɵangular_packages_core_core_w = startTimeRange;\n    exports.ɵangular_packages_core_core_ba = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bh = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_bb = getLView;\n    exports.ɵangular_packages_core_core_bc = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bd = nextContextImpl;\n    exports.ɵangular_packages_core_core_bg = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bk = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_y = _def;\n    exports.ɵangular_packages_core_core_z = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}