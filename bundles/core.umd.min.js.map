{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","Inject","Optional","Self","SkipSelf","Host","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","defaultScheduler","requestAnimationFrame","setTimeout","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","slice","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","parent","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","resetComponentState","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_hostView","_injectorIndex","getFactoryOf","typeAny","getInheritedFactory","noop","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","parentFirstTemplatePass","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","createLViewData","createNodeAtIndex","createTNode","createViewNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","directive","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","R3ElementRef","R3TemplateRef","R3ViewContainerRef","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","configurable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","loadContext","createRootComponentView","rNode","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","hostRNode","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵEC","elementContainerStart","ɵeC","elementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18nAttribute","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Version","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","VERSION","full","major","minor","patch","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","shift","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵmarkDirty","markDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","ɵi18nInterpolation1","i18nInterpolation1","ɵi18nInterpolation2","i18nInterpolation2","ɵi18nInterpolation3","i18nInterpolation3","idx","ɵi18nInterpolation4","i18nInterpolation4","b1","ɵi18nInterpolation5","i18nInterpolation5","ɵi18nInterpolation6","i18nInterpolation6","ɵi18nInterpolation7","i18nInterpolation7","b2","ɵi18nInterpolation8","i18nInterpolation8","ɵi18nInterpolationV","i18nInterpolationV","ɵi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ɵWRAP_RENDERER_FACTORY2","ɵsetClassMetadata","setClassMetadata","clazz","ɵRender3DebugRendererFactory2","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$1","getRootView$1","componentOrView","ɵgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵpublishGlobalUtil","publishGlobalUtil","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0-beta.1+80.sha-3ca1a57\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & 8 /* Optional */)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & 8 /* Optional */ && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setTNodeAndViewData(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData, rf) {\n        var tView = getTView();\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(viewData, tView, creationMode);\n            }\n            setHostBindings(tView, viewData);\n            refreshDynamicEmbeddedViews(viewData);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass, rf);\n            }\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var viewData = getViewData();\n        var isFirstRender = (viewData[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings || noop);\n        if (def.hostVars)\n            tView.expandoInstructions.push(def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData, null);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass, rf) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[FLAGS] & 64 /* IsRoot */ ? null : lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ngDev).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ngDev';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵEC': elementContainerStart,\n        'ɵeC': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18nAttribute': i18nAttribute,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-beta.1+80.sha-3ca1a57');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }], null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], [], null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], [{\n            type: Injector\n        }], null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }], null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }], null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], [{\n            type: ApplicationRef\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (this.createDebugContext(el));\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵdefineNgModule = defineNgModule;\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineNgModule = ɵdefineNgModule;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18nAttribute = i18nAttribute;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nExpMapping = i18nExpMapping;\n    exports.ɵi18nInterpolation1 = i18nInterpolation1;\n    exports.ɵi18nInterpolation2 = i18nInterpolation2;\n    exports.ɵi18nInterpolation3 = i18nInterpolation3;\n    exports.ɵi18nInterpolation4 = i18nInterpolation4;\n    exports.ɵi18nInterpolation5 = i18nInterpolation5;\n    exports.ɵi18nInterpolation6 = i18nInterpolation6;\n    exports.ɵi18nInterpolation7 = i18nInterpolation7;\n    exports.ɵi18nInterpolation8 = i18nInterpolation8;\n    exports.ɵi18nInterpolationV = i18nInterpolationV;\n    exports.ɵi18nMapping = i18nMapping;\n    exports.ɵWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}