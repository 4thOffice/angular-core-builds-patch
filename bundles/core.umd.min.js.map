{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","def","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","readElementValue","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","appendChild","renderParent","getRenderParent","appendProjectedNode","currentParent","lContainer","ngContainerChild","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","NG_HOST_SYMBOL","_CLEAN_PROMISE","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getRendererFactory","previousOrParentNode","isParent","currentQueries","currentElementNode","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","host","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","hostVars","executeInitAndContentHooks","createLViewData","instance","blueprint","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","adjustBlueprintForNewNode","resetApplicationState","rf","_isParent","_previousOrParentNode","template","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","hostView","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","lNode","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","isContentQueryHost","clone","tDirectives","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","NO_CHANGE","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","consts","vars","pipes","viewQuery","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","styles","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","createRootContext","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","encapsulation","Emulated","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","ngOnDestroy","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","viewProviders","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getClosureSafeProperty$1","fillProperties","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","ngBaseDef","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","ChangeDetectorRef","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","TemplateRef","ViewContainerRef","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ViewRef","_view","_appRef","_viewContainerRef","_lViewNode","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","componentDef","isInternalRootView","wrapper","elementNode","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectAttribute","attrNameToInject","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","clear","createEmbeddedView","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","destroyed","move","newIndex","shift","TemplateRef$1","getFactoryOf","ngInjectorDef","getInheritedFactory","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewNode","declarationView","queries","templateRefExtractor","PublicFeature","i18nTagRegex","appendI18nNode","previousNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","LQueries_","shallow","deep","track","predicate","descend","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStylingProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµzh","Éµzs","Éµzss","Éµzr","Éµzc","sanitizeScript","unsafeScript","SCRIPT","Éµzu","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","wrapReference","isNgModule","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","GET_PROPERTY_NAME$1","noop","R3_COMPILE_COMPONENT$1","R3_COMPILE_DIRECTIVE$1","R3_COMPILE_PIPE$1","GET_PROPERTY_NAME$2","USE_VALUE$2","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","Directive","Component","Default","Pipe","NG_BASE_DEF","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","preR3NgModuleCompile","R3_COMPILE_NGMODULE$1","VERSION","full","major","minor","patch","Injectable","preR3InjectableCompile","injectableType","R3_COMPILE_INJECTABLE$1","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_x","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_z","Éµangular_packages_core_core_y","Éµangular_packages_core_core_v","Éµangular_packages_core_core_w","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_bf","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext","Éµi18nApply","i18nApply","instructions","localParentNode","localPreviousNode","instruction","textRNode","removedNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","compileNgModuleDefs","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","ÉµpatchComponentDefWithScope","ÉµcompileComponent","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","scopes","transitiveScopesFor","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","ÉµcompileDirective","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","ÉµcompilePipe","compilePipe","compilePipeFromMetadata","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµsanitizeUrl","ÉµsanitizeResourceUrl","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.3+58.sha-6a0f78f\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // NOTE: The order here matters: Checking window, then global, then self is important.\n    //   checking them in another order can result in errors in some Node environments.\n    var __global$1 = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n        typeof self != 'undefined' && self;\n    function ngDevModeResetPerfCounters() {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        return __global$1['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        __global$1['ngDevMode'] = ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(node.tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reason:\n     * - view is not inserted into any container (view was created but not iserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view this view was inserted into a container and\n     * the container itself has it render parent determined.\n     */\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                while (grandParent.tNode.type === 4 /* ElementContainer */) {\n                    grandParent = getParentLNode(grandParent);\n                }\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        else if (node.tNode.type === 4 /* ElementContainer */) {\n            var ngContainerChild = getChildLNode(node);\n            while (ngContainerChild) {\n                appendProjectedNode(ngContainerChild, currentParent, currentView, renderParent);\n                ngContainerChild = getNextLNode(ngContainerChild);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    var currentElementNode = null;\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var tNode = previousOrParentNode.tNode;\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentNode.data !== viewData && !isContentQueryHost(tNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            tNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentNode = null;\n                oldView = enterView(viewNode.data, viewNode);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentNode = _previousOrParentNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 4 /* ElementContainer */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(lNode) {\n        return lNode.native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(lNode, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(lNode.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(lNode, localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentNode.tNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < hostVars; i++) {\n            tView.blueprint.push(NO_CHANGE);\n            viewData.push(NO_CHANGE);\n        }\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentNode.tNode.index - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(tNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(lNode, localRefExtractor) {\n        var localNames = lNode.tNode.localNames;\n        if (localNames) {\n            var localIndex = lNode.tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(lNode) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        ngDevMode && assertNodeOfPossibleTypes(previousOrParentNode, 3 /* Element */);\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var node = containerInternal(index, tagName || null, attrs || null, localRefs || null);\n        if (firstTemplatePass) {\n            node.tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(node, localRefs, localRefExtractor);\n        currentQueries && (currentQueries = currentQueries.addNode(node));\n        queueLifecycleHooks(node.tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var node = containerInternal(index, null, null, null);\n        firstTemplatePass && (node.tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        return node;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDescendantViews();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef);\n            if (componentDef.hostBindings) {\n                queueHostBindingForCheck(0, componentDef.hostVars);\n            }\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(rootView[TVIEW].hostBindings);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || EMPTY$1,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef);\n                rootContext.components.push(component);\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer);\n            appendChild(hostParent, comment, vcRefHost.view);\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = typeAny.ngComponentDef || typeAny.ngDirectiveDef || typeAny.ngPipeDef ||\n            typeAny.ngInjectableDef || typeAny.ngInjectorDef;\n        if (def === undefined || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this.elementRef = elementRef;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(lNode) {\n        return getOrCreateTemplateRef(getOrCreateNodeInjectorForNode(lNode));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1;\n                    var textLNode = createLNode(lastNodeIndex - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.deep, node);\n            if (isContentQueryHost(node.tNode)) {\n                add(this.shallow, node);\n                if (node.tNode.parent && isContentQueryHost(node.tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, node);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(node.tNode) && add(this.shallow, node);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 15 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStylingProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµzh': sanitizeHtml,\n        'Éµzs': sanitizeStyle,\n        'Éµzss': defaultStyleSanitizer,\n        'Éµzr': sanitizeResourceUrl,\n        'Éµzc': sanitizeScript,\n        'Éµzu': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrap),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var Éµ0$1 = GET_PROPERTY_NAME$1;\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: Éµ0$1 }, GET_PROPERTY_NAME$1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() { }\n    var R3_COMPILE_COMPONENT__PRE_NGCC__ = noop;\n    var R3_COMPILE_DIRECTIVE__PRE_NGCC__ = noop;\n    var R3_COMPILE_INJECTABLE__PRE_NGCC__ = preR3InjectableCompile;\n    var R3_COMPILE_NGMODULE__PRE_NGCC__ = preR3NgModuleCompile;\n    var R3_COMPILE_PIPE__PRE_NGCC__ = noop;\n    var ivyEnable__PRE_NGCC__ = false;\n    var ivyEnabled$1 = ivyEnable__PRE_NGCC__;\n    var R3_COMPILE_COMPONENT$1 = R3_COMPILE_COMPONENT__PRE_NGCC__;\n    var R3_COMPILE_DIRECTIVE$1 = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\n    var R3_COMPILE_INJECTABLE$1 = R3_COMPILE_INJECTABLE__PRE_NGCC__;\n    var R3_COMPILE_NGMODULE$1 = R3_COMPILE_NGMODULE__PRE_NGCC__;\n    var R3_COMPILE_PIPE$1 = R3_COMPILE_PIPE__PRE_NGCC__;\n    ////////////////////////////////////////////////////////////\n    // Glue code which should be removed after Ivy is default //\n    ////////////////////////////////////////////////////////////\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var Éµ0$2 = GET_PROPERTY_NAME$2;\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: Éµ0$2 }, GET_PROPERTY_NAME$2);\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE$1(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT$1(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE$1(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Used to get the minified alias of ngBaseDef\n     */\n    var NG_BASE_DEF = Object.keys({ ngBaseDef: true })[0];\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.3+58.sha-6a0f78f');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (directive[NG_HOST_SYMBOL] === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_i = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_j = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_h = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_m = wtfEnabled;\n    exports.Éµangular_packages_core_core_o = createScope;\n    exports.Éµangular_packages_core_core_n = detectWTF;\n    exports.Éµangular_packages_core_core_r = endTimeRange;\n    exports.Éµangular_packages_core_core_p = leave;\n    exports.Éµangular_packages_core_core_q = startTimeRange;\n    exports.Éµangular_packages_core_core_x = getOrCreateChangeDetectorRef;\n    exports.Éµangular_packages_core_core_ba = getOrCreateContainerRef;\n    exports.Éµangular_packages_core_core_z = getOrCreateElementRef;\n    exports.Éµangular_packages_core_core_y = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_v = getOrCreateNodeInjector;\n    exports.Éµangular_packages_core_core_w = getOrCreateNodeInjectorForNode;\n    exports.Éµangular_packages_core_core_bb = getOrCreateTemplateRef;\n    exports.Éµangular_packages_core_core_bc = bindingUpdated;\n    exports.Éµangular_packages_core_core_bf = loadInternal;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_s = _def;\n    exports.Éµangular_packages_core_core_t = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_u = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled$1;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStylingProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}