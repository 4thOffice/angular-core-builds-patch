{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ngFactoryDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","elementDepthCount","bindingsEnabled","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","activeDirectiveId","hasActiveElementFlag","flag","_selectedIndex","setActiveHostElement","elementIndex","getSelectedIndex","executeElementExitFn","setSelectedIndex","previousOrParentTNode","isParent","_elementExitFn","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","nextContextImpl","level","walkUpViews","nestingLevel","currentView","_currentSanitizer","RendererStyleFlags3","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","getConfig","hasConfig","allowDirectStyling","hostBindingsMode","config","getLockedConfig","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","bindingIndex","getValue","isContextLocked","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","str","prop","attrValue","stylingMapToStringMap","stringMap","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","bindingValue","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","lockAndFinalizeContext","updateInitialStylingOnContext","initialStyling","hasInitialStyling","lockContext","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","applyStylingValue","applyFn","valueToApply","initialStyles","findInitialStylingValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","_mapValues","mockElement","mapFn","hasMapBindings","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","templateBindingsLocked","hostBindingsLocked","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","inputsStore","outputsStore","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","injectorDef","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","isHostStyling","getClassesContext","getStylesContext","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","applyStylingMapDirectly","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","getComponentMetadata","compileFactory","hasSelectorScope","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","compileDirective","getDirectiveMetadata","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__PRE_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_b","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bm","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.7+19.sha-86fd571.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ngFactoryDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var factoryFn = type[NG_FACTORY_DEF] || null;\n        if (!factoryFn && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngFactoryDef' property.\");\n        }\n        return factoryFn;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var activeDirectiveId = 0;\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (_selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        _selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (getSelectedIndex() !== elementIndex) {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = 0;\n        }\n    }\n    var _elementExitFn = null;\n    function executeElementExitFn() {\n        _elementExitFn();\n        // TODO (matsko|misko): remove this unassignment once the state management of\n        //                      global variables are better managed.\n        _selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        _elementExitFn = fn;\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n    }\n    /* tslint:disable */\n    var _selectedIndex = -1 << 1 /* Size */;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index << 1 /* Size */;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        initialStyling = initialStyling || allocStylingMapArray();\n        return [\n            0 /* Initial */,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray() {\n        return [''];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. context is locked for template or host bindings (depending on `hostBindingsMode`)\n     * 2. There are no collisions (i.e. properties with more than one binding)\n     * 3. There are only \"prop\" or \"map\" bindings present, but not both\n     */\n    function allowDirectStyling(context, hostBindingsMode) {\n        var config = getConfig(context);\n        return ((config & getLockedConfig(hostBindingsMode)) !== 0) &&\n            ((config & 4 /* HasCollisions */) === 0) &&\n            ((config & 3 /* HasPropAndMapBindings */) !== 3 /* HasPropAndMapBindings */);\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex > 0 ? data[bindingIndex] : null;\n    }\n    function lockContext(context, hostBindingsMode) {\n        patchConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function isContextLocked(context, hostBindingsMode) {\n        return hasConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function getLockedConfig(hostBindingsMode) {\n        return hostBindingsMode ? 128 /* HostBindingsLocked */ :\n            64 /* TemplateBindingsLocked */;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 2 /* isComponentHost */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        // TODO(crisbeto): unify injectable factories with getFactory.\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        var factory = def && def.factory || getFactoryDef(typeAny);\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ?\n            value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() ||\n            null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        if (value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        if (value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (!isContextLocked(context, hostBindingsMode)) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 32 /* HasHostBindings */ : 16 /* HasTemplateBindings */);\n            patchConfig(context, prop ? 1 /* HasPropBindings */ : 2 /* HasMapBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 32 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 1 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 4 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            if (!isContextLocked(stylesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(stylesContext, hostBindingsMode);\n            }\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            if (!isContextLocked(classesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(classesContext, hostBindingsMode);\n            }\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     *\n     * Note that the `TStylingContext` styling context contains two locks: one for template bindings\n     * and another for host bindings. Either one of these locks will be set when styling is applied\n     * during the template binding flush and/or during the host bindings flush.\n     */\n    function lockAndFinalizeContext(context, hostBindingsMode) {\n        var initialValues = getStylingMapArray(context);\n        updateInitialStylingOnContext(context, initialValues);\n        lockContext(context, hostBindingsMode);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 8 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * See `allowDirectStylingApply`.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, map, applyFn, sanitizer, forceUpdate) {\n        if (forceUpdate || hasValueChanged(data[bindingIndex], map)) {\n            setValue(data, bindingIndex, map);\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * See `allowDirectStylingApply`.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, applyFn, sanitizer) {\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer);\n            return true;\n        }\n        return false;\n    }\n    function applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 2 /* SanitizeOnly */) : valueToApply;\n        }\n        else if (hasConfig(context, 8 /* HasInitialStyling */)) {\n            var initialStyles = getStylingMapArray(context);\n            if (initialStyles) {\n                valueToApply = findInitialStylingValue(initialStyles, prop);\n            }\n        }\n        applyFn(renderer, element, prop, valueToApply, bindingIndex);\n    }\n    function findInitialStylingValue(map, prop) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p >= prop) {\n                return p === prop ? getMapValue(map, i) : null;\n            }\n        }\n        return null;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            if (value) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, isClassBased) {\n        var debug = new TStylingContextDebug(context, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _isClassBased) {\n            this.context = context;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 3 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 3 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context.context, 2 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(context) {\n        var hasMapBindings = hasConfig(context, 2 /* HasMapBindings */);\n        var hasPropBindings = hasConfig(context, 1 /* HasPropBindings */);\n        var hasCollisions = hasConfig(context, 4 /* HasCollisions */);\n        var hasTemplateBindings = hasConfig(context, 16 /* HasTemplateBindings */);\n        var hasHostBindings = hasConfig(context, 32 /* HasHostBindings */);\n        var templateBindingsLocked = hasConfig(context, 64 /* TemplateBindingsLocked */);\n        var hostBindingsLocked = hasConfig(context, 128 /* HostBindingsLocked */);\n        var allowDirectStyling$1 = allowDirectStyling(context, false) || allowDirectStyling(context, true);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            templateBindingsLocked: templateBindingsLocked,\n            hostBindingsLocked: hostBindingsLocked,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            inputsStore = generatePropertyAliases(directiveDef.inputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            propName[0] === ANIMATION_PROP_PREFIX || typeof Node !== 'function' ||\n            !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 8 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(lView, directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 2 /* isComponentHost */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = (flags & 2 /* isComponentHost */) | 1 /* isDirectiveHost */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponentHost(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var hostBindingsMode = isHostStyling();\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased ? setClass : setStyle, sanitizer);\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false);\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true);\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var directiveIndex = getActiveDirectiveId();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = lView[bindingIndex];\n        var hostBindingsMode = isHostStyling();\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, stylingMapArr, isClassBased ? setClass : setStyle, sanitizer, valueHasChanged);\n        }\n        else {\n            updated = valueHasChanged;\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context, false)) {\n                var inputName = isClassBased ? 'class' : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray();\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray();\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = tNode.inputs;\n            if (inputData != null) {\n                if (inputData.hasOwnProperty('class')) {\n                    tNode.flags |= 16 /* hasClassInput */;\n                }\n                if (inputData.hasOwnProperty('style')) {\n                    tNode.flags |= 32 /* hasStyleInput */;\n                }\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ngInjectableDef = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.7+19.sha-86fd571.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        var ngFactoryDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var compiler = getCompilerFacade();\n                    var meta = getComponentMetadata(compiler, type, metadata);\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactory.js\", meta.metadata);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    var meta = getComponentMetadata(compiler, type, metadata);\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, meta.templateUrl, meta.metadata);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function getComponentMetadata(compiler, type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n            if (metadata.templateUrl) {\n                error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n            }\n            if (metadata.styleUrls && metadata.styleUrls.length) {\n                error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n            }\n            error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n            throw new Error(error_1.join('\\n'));\n        }\n        var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n        var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n        if (meta.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: meta, templateUrl: templateUrl };\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactory.js\", meta.metadata);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/ngDirectiveDef.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngFactory.js\", metadata, true);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngPipeDef.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        var context = loadLContext(element, false);\n        if (!context) {\n            return {};\n        }\n        var lView = context.lView;\n        var tData = lView[TVIEW].data;\n        var tNode = tData[context.nodeIndex];\n        if (isClassBased) {\n            return isStylingContext(tNode.classes) ?\n                new NodeStylingDebug(tNode.classes, lView, true).values :\n                stylingMapToStringMap(tNode.classes);\n        }\n        else {\n            return isStylingContext(tNode.styles) ?\n                new NodeStylingDebug(tNode.styles, lView, false).values :\n                stylingMapToStringMap(tNode.styles);\n        }\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please add `import \\'@angular/localize/init\\';` to your polyfills.ts file.');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bn = getRootContext;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bm = noSideEffects;\n    exports.ɵangular_packages_core_core_bi = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bj = makePropDecorator;\n    exports.ɵangular_packages_core_core_bk = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}