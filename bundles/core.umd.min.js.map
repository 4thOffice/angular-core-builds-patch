{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","compiler","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","getNextLNodeWithProjection","pNextOrParent","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","nextNode","parent_1","native","executeNodeAction","lContainerNode","childContainerData","head","currentNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","grandParentContainer","appendChild","renderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","lViewData","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","adjustedIndex","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","load","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","setProperty","tViews","initialInputs","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyleNamed","styleName","suffixOrSanitizer","removeStyle","DashCase","removeProperty","setStyle","elementStyle","style","styleValue","textNode","textBinding","existingNode","setValue","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","findComponentHost","store","addToProjectionList","projectionNode","appendedFirst","appendedLast","projectionNodeData","tail","projection","nodeIndex","localIndex","selectorIndex","nodesForSelector","loadInternal","canInsert","nodeToProject","previouslyProjected","viewRootLNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","loadDirective","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","currValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY$1","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","styles","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","pipeDef","pure","fillProperties","PRIVATE_PREFIX","NgOnChangesFeature","definition","declaredToMinifiedInputs","proto","_loop_1","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","notImplemented","insert","move","newIndex","shift","_tView","_renderer","_queries","createEmbeddedViewNode","ComponentRef$1","ComponentRef","ComponentFactory$1","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver$1","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$$1","ComponentFactory$$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$$1","destroyCbs","location","i18nTagRegex","appendI18nNode","previousNode","NgModuleRef$1","NgModuleRef","NgModuleFactory$1","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","NgModuleFactory$$1","moduleType","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","list","viewValuesIdx","setDirty","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","dirty","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµInheritDefinitionFeature","InheritDefinitionFeature","superType","getSuperType","superDef","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","e_1_1","e_1","return","superPrototype","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµk","Éµkn","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµrS","Éµs","Éµsn","Éµst","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","split","piece","trim","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable$1","hasAProvider","expression","compileInjectable","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","c","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","Input","Output","HostBinding","HostListener","NgModule","compileNgModule$1","emitInline","compileNgModule","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","ApplicationRef_Factory","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","_c","merge$1","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","INJECTORRefTokenKey","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI","i18nInterpolation","numberOfExp","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","tmplContainers","lastChildIndex","generateMappingInstructions","translationParts","tmplIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","phIndex","tmplElements","phKeys","ph","tmplExpressions","index_2","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.3+27.sha-c94a2c9\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('rxjs'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', '@angular/compiler', 'rxjs', 'rxjs/operators'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.ng.compiler,global.rxjs,global.rxjs.operators));\n}(this, (function (exports,compiler,rxjs,operators) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakeable Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        var TypeDecorator = function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        };\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n *  @Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n *\n */\n\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * Describes the status of the detector.\n */\n\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponnent{\n * }\n *\n * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n * // needs to be resolved because `renderComponent` is synchronous process.\n * // renderComponent(MyComponent);\n *\n * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n * // Use browser's `fetch` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n * URL. Browser's `fetch` method is a good default implementation.\n */\nfunction resolveComponentResources(resourceResolver) {\n    // Store all promises which are fetching the resources.\n    var urlFetches = [];\n    // Cache so that we don't fetch the same resource more than once.\n    var urlMap = new Map();\n    function cachedResourceResolve(url) {\n        var promise = urlMap.get(url);\n        if (!promise) {\n            var resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n            urlFetches.push(promise);\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach(function (component) {\n        if (component.templateUrl) {\n            cachedResourceResolve(component.templateUrl).then(function (template) {\n                component.template = template;\n                component.templateUrl = undefined;\n            });\n        }\n        var styleUrls = component.styleUrls;\n        var styles = component.styles || (component.styles = []);\n        var styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach(function (styleUrl, index) {\n            styles.push(''); // pre-allocate array.\n            cachedResourceResolve(styleUrl).then(function (style) {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            });\n        });\n    });\n    componentResourceResolutionQueue.clear();\n    return Promise.all(urlFetches).then(function () { return null; });\n}\nvar componentResourceResolutionQueue = new Set();\nfunction maybeQueueResolutionOfComponentResources(metadata) {\n    if (componentNeedsResolution(metadata)) {\n        componentResourceResolutionQueue.add(metadata);\n    }\n}\nfunction componentNeedsResolution(component) {\n    return component.templateUrl || component.styleUrls && component.styleUrls.length;\n}\n\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nvar INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = {};\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        var injectableDef = token.ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = 0;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\nvar HEADER_OFFSET = 15;\n// Below are constants for LViewData indices to help us look up LViewData members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nvar TVIEW = 0;\nvar PARENT = 1;\nvar NEXT = 2;\nvar QUERIES = 3;\nvar FLAGS = 4;\nvar HOST_NODE = 5;\nvar BINDING_INDEX = 6;\nvar DIRECTIVES = 7;\nvar CLEANUP = 8;\nvar CONTEXT = 9;\nvar INJECTOR$1 = 10;\nvar RENDERER = 11;\nvar SANITIZER = 12;\nvar TAIL = 13;\nvar CONTAINER_INDEX = 14;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LViewData[DIRECTIVES]\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(flags, tView) {\n    if (tView.firstTemplatePass) {\n        var start = flags >> 13;\n        var count = flags & 4095;\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            var def = tView.directives[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView[FLAGS] & 16 /* RunInit */) {\n        executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n        currentView[FLAGS] &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(data[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n    function ngDevModeResetPerfCounters() {\n        global['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n        };\n    }\n    ngDevModeResetPerfCounters();\n    return ngDevModeResetPerfCounters;\n})(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n    typeof global != 'undefined' && global));\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nvar ACTIVE_INDEX = 0;\n// PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n// As we already have these constants in LViewData, we don't need to re-create them.\nvar VIEWS = 4;\nvar RENDER_PARENT = 5;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(node, 'should be called with a node');\n    var found = types.some(function (type) { return node.tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Retrieves the sibling node for the given node. */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        var viewData = node.data;\n        return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n    }\n    return node.tNode.next ? node.view[node.tNode.next.index] : null;\n}\n/** Retrieves the first child of a given node */\nfunction getChildLNode(node) {\n    if (node.tNode.child) {\n        var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n        return viewData[node.tNode.child.index];\n    }\n    return null;\n}\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n        // This is a dynamically created view inside a dynamic container.\n        // If the host index is -1, the view has not yet been inserted, so it has no parent.\n        var containerHostIndex = node.data[CONTAINER_INDEX];\n        return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n    }\n    var parent = node.tNode.parent;\n    return parent ? node.view[parent.index] : node.view[HOST_NODE];\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var isLastProjectedNode = pNextOrParent.tNode.type === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return getNextLNode(node);\n}\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n *\n * @param startingNode the node from which the walk is started.\n * @param rootNode the root node considered.\n * @param action identifies the action to be performed on the LElement nodes.\n * @param renderer the current renderer.\n * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n * required for action modes Insert and Destroy.\n * @param beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    var node = startingNode;\n    while (node) {\n        var nextNode = null;\n        var parent_1 = renderParentNode ? renderParentNode.native : null;\n        if (node.tNode.type === 3 /* Element */) {\n            // Execute the action\n            executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n            if (node.dynamicLContainerNode) {\n                executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n            }\n            nextNode = getNextLNode(node);\n        }\n        else if (node.tNode.type === 0 /* Container */) {\n            executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n            var lContainerNode = node;\n            var childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData[RENDER_PARENT] = renderParentNode;\n            }\n            nextNode =\n                childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            if (nextNode) {\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.native :\n                    lContainerNode.native;\n            }\n        }\n        else if (node.tNode.type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = node.data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(node);\n        }\n        if (nextNode == null) {\n            /**\n             * Find the next node in the LNode tree, taking into account the place where a node is\n             * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n             *\n             * If there is no sibling node, then it goes to the next sibling of the parent node...\n             * until it reaches rootNode (at which point null is returned).\n             */\n            var currentNode = node;\n            node = getNextLNodeWithProjection(currentNode);\n            while (currentNode && !node) {\n                // if node.pNextOrParent is not null here, it is not the next node\n                // (because, at this point, nextNode is null, so it is the parent)\n                currentNode = currentNode.pNextOrParent || getParentLNode(currentNode);\n                if (currentNode === rootNode) {\n                    return null;\n                }\n                // When the walker exits a container, the beforeNode has to be restored to the previous\n                // value.\n                if (currentNode && !currentNode.pNextOrParent &&\n                    currentNode.tNode.type === 0 /* Container */) {\n                    beforeNode = currentNode.native;\n                }\n                node = currentNode && getNextLNodeWithProjection(currentNode);\n            }\n        }\n        else {\n            node = nextNode;\n        }\n    }\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore(parent, node, beforeNode) :\n            parent.insertBefore(node, beforeNode, true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(renderer) ?\n            renderer.removeChild(parent, node) :\n            parent.removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++;\n        renderer.destroyNode(node);\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var parentNode = container.data[RENDER_PARENT];\n    var parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        var node = getChildLNode(rootNode);\n        var renderer = container.view[RENDERER];\n        walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            // If LViewData, traverse down to child.\n            var view = viewOrContainer;\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            // If container, traverse down to its first LViewData.\n            var container = viewOrContainer;\n            if (container[VIEWS].length)\n                next = container[VIEWS][0].data;\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param viewNode The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    var state = container.data;\n    var views = state[VIEWS];\n    var lView = viewNode.data;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data[NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container'S host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (viewNode.tNode.index === -1) {\n        lView[CONTAINER_INDEX] = container.tNode.parent.index;\n        viewNode.view = container.view;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        lView[QUERIES].insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param container The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns The detached view\n */\nfunction detachView(container, removeIndex) {\n    var views = container.data[VIEWS];\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n    }\n    views.splice(removeIndex, 1);\n    if (!container.tNode.detached) {\n        addRemoveViewFromContainer(container, viewNode, false);\n    }\n    // Notify query that view has been removed\n    var removedLView = viewNode.data;\n    if (removedLView[QUERIES]) {\n        removedLView[QUERIES].removeView();\n    }\n    removedLView[CONTAINER_INDEX] = -1;\n    viewNode.view = null;\n    // Unsets the attached flag\n    viewNode.data[FLAGS] &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nfunction removeView(container, removeIndex) {\n    var viewNode = container.data[VIEWS][removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/** Gets the child of the given LViewData */\nfunction getLViewChild(viewData) {\n    if (viewData[TVIEW].childIndex === -1)\n        return null;\n    var hostNode = viewData[viewData[TVIEW].childIndex];\n    return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nfunction destroyLView(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var node;\n    if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getParentLNode(node).data;\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LViewData to clean up\n */\nfunction cleanUpView(viewOrContainer) {\n    if (viewOrContainer[TVIEW]) {\n        var view = viewOrContainer;\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view[RENDERER].destroy();\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(viewData) {\n    var cleanup = viewData[TVIEW].cleanup;\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                // This is a listener with the native renderer\n                var native = viewData[cleanup[i + 1]].native;\n                var listener = viewData[CLEANUP][cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                // This is a listener with renderer2 (cleanup fn can be found by index)\n                var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = viewData[CLEANUP][cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        viewData[CLEANUP] = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view[TVIEW];\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view[DIRECTIVES], destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(viewData) {\n    var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(viewData, pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n\n *\n * @param parent The parent where the child will be inserted into.\n * @param currentView Current LView being processed.\n * @return boolean Whether the child should be inserted now (or delayed until later).\n */\nfunction canInsertNativeNode(parent, currentView) {\n    // We can only insert into a Component or View. Any other type should be an Error.\n    ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n    if (parent.tNode.type === 3 /* Element */) {\n        // Parent is an element.\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        else {\n            // Parent is a Component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would than move it to its final destination.\n            return false;\n        }\n    }\n    else {\n        // Parent is a View.\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        else {\n            // The parent `Container` is in inserted state, so we can eagerly insert into\n            // this location.\n            return true;\n        }\n    }\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        var renderer = currentView[RENDERER];\n        if (parent.tNode.type === 2 /* View */) {\n            var container = getParentLNode(parent);\n            var renderParent = container.data[RENDER_PARENT];\n            var views = container.data[VIEWS];\n            var index = views.indexOf(parent);\n            var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(renderParent.native, child, beforeNode) :\n                renderParent.native.insertBefore(child, beforeNode, true);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                parent.native.appendChild(child);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Removes the `child` element of the `parent` from the DOM.\n *\n * @param parent The parent from which to remove the child\n * @param child The child that should be removed\n * @param currentView The current LView\n * @returns Whether or not the child was removed\n */\nfunction removeChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only remove the element if not in View or not projected.\n        var renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n            parent.native.removeChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nfunction appendProjectedNode(node, currentParent, currentView, renderParent) {\n    appendChild(currentParent, node.native, currentView);\n    if (node.tNode.type === 0 /* Container */) {\n        // The node we are adding is a container and we are adding it to an element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assign the final projection location in those cases.\n        var lContainer = node.data;\n        lContainer[RENDER_PARENT] = renderParent;\n        var views = lContainer[VIEWS];\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(node, views[i], true, node.native);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n        appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = void 0;\n                var maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    var selectOnlyMode = false;\n    var i = 0;\n    while (i < attrs.length) {\n        var maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 1 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n *\n * Note: Element is not actually stored at index 0 because of the LViewData\n * header, but the host bindings function expects an index that is NOT adjusted\n * because it will ultimately be fed to instructions like elementProperty.\n */\nvar _ROOT_DIRECTIVE_INDICES = [0, 0];\n/**\n * TView.data needs to fill the same number of slots as the LViewData header\n * so the indices of nodes are consistent between LViewData and TView.data.\n *\n * It's much faster to keep a blueprint of the pre-filled array and slice it\n * than it is to create a new array and fill it each time a TView is created.\n */\nvar HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nvar CIRCULAR$1 = '__CIRCULAR__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\nfunction getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\nfunction getCurrentSanitizer() {\n    return viewData && viewData[SANITIZER];\n}\nfunction getViewData() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return viewData;\n}\n/** Used to set the parent property when nodes are created. */\nvar previousOrParentNode;\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\nvar tView;\nvar currentQueries;\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (inb this previousOrParentNode points to a node on which we\n * create content queries).\n */\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueries ||\n        (currentQueries =\n            (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                new QueryType()));\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar viewData;\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nvar directives;\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, host) {\n    var oldView = viewData;\n    directives = newView && newView[DIRECTIVES];\n    tView = newView && newView[TVIEW];\n    creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && tView.firstTemplatePass;\n    renderer = newView && newView[RENDERER];\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    viewData = newView;\n    currentQueries = newView && newView[QUERIES];\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    viewData[FLAGS] |= 16 /* RunInit */;\n    viewData[BINDING_INDEX] = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n */\nfunction refreshView() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n    }\n    refreshDynamicEmbeddedViews(viewData);\n    if (!checkNoChangesMode) {\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        var defs = tView.directives;\n        for (var i = 0; i < bindings.length; i += 2) {\n            var dirIndex = bindings[i];\n            var def = defs[dirIndex];\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\nfunction createLViewData(renderer, tView, context, flags, sanitizer) {\n    return [\n        tView,\n        viewData,\n        null,\n        null,\n        flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        null,\n        -1,\n        null,\n        null,\n        context,\n        viewData && viewData[INJECTOR$1],\n        renderer,\n        sanitizer || null,\n        null,\n        -1 // containerIndex\n    ];\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: native,\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null,\n        dynamicLContainerNode: null\n    };\n}\nfunction createLNode(index, type, native, name, attrs, state) {\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && getParentLNode(previousOrParentNode);\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var tParent = parent && parent.view === viewData ? parent.tNode : null;\n    var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var isState = state != null;\n    var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = (state ? state[TVIEW].node : null) ||\n            createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        var adjustedIndex = index + HEADER_OFFSET;\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(adjustedIndex);\n        var tData = tView.data;\n        viewData[adjustedIndex] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (adjustedIndex >= tData.length) {\n            var tNode = tData[adjustedIndex] =\n                createTNode(type, adjustedIndex, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                var previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = tData[adjustedIndex];\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        var lViewData = state;\n        ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n        lViewData[HOST_NODE] = node;\n        if (firstTemplatePass)\n            lViewData[TVIEW].node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = null;\n}\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\n\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n */\nfunction createEmbeddedViewNode(tView, context, renderer, queries) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    isParent = true;\n    previousOrParentNode = null;\n    var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n    isParent = _isParent;\n    previousOrParentNode = _previousOrParentNode;\n    return viewNode;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewNode, tView, context, rf) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    var oldView;\n    try {\n        isParent = true;\n        previousOrParentNode = null;\n        oldView = enterView(viewNode.data, viewNode);\n        namespaceHTML();\n        tView.template(rf, context);\n        if (rf & 2 /* Update */) {\n            refreshView();\n        }\n        else {\n            viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n        }\n    }\n    finally {\n        // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n        // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n        var isCreationOnly = (rf & 1 /* Create */) === 1;\n        leaveView(oldView, isCreationOnly);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            namespaceHTML();\n            template(getRenderFlags(hostView), componentOrContext);\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, HEADER_OFFSET);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view) {\n    return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n//////////////////////////\n//// Namespace\n//////////////////////////\nvar _currentNamespace = null;\nfunction namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\nfunction namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\nfunction namespaceHTML() {\n    _currentNamespace = null;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LViewData array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native;\n    if (isProceduralRenderer(renderer)) {\n        native = renderer.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = renderer.createElement(name);\n        }\n        else {\n            native = renderer.createElementNS(_currentNamespace, name);\n        }\n    }\n    ngDevMode && assertDataInRange(index - 1);\n    var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n    if (attrs)\n        setUpAttributes(native, attrs);\n    appendChild(getParentLNode(node), native, viewData);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the current node\n */\nfunction createDirectivesAndLocals(localRefs) {\n    var node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    var exportsMap = localRefs ? { '': -1 } : null;\n    var matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            var valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(matches[valueIndex], def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode) {\n    var registry = tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                if (def.template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return matches;\n}\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$1;\n        var instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$1) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n    }\n}\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    // Must subtract the header offset because hostBindings functions are generated with\n    // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n}\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        injector.changeDetectorRef._setComponentContext(view, instance);\n    }\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n    var tNode = previousOrParentNode.tNode;\n    var count = tNode.flags & 4095;\n    if (count > 0) {\n        var start = tNode.flags >> 13;\n        var end = start + count;\n        var tDirectives = tView.directives;\n        for (var i = start; i < end; i++) {\n            var def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LViewData in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData() {\n    var localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ? previousOrParentNode.native : directives[index];\n            viewData.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(template, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, template, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        template: template,\n        viewQuery: viewQuery,\n        node: null,\n        data: HEADER_FILLER.slice(),\n        childIndex: -1,\n        bindingStartIndex: -1,\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\nfunction setUpAttributes(native, attrs) {\n    var isProc = isProceduralRenderer(renderer);\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n            i += 2;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (attrName === 0 /* NamespaceURI */) {\n                // Namespaced attributes\n                var namespaceURI = attrs[i + 1];\n                var attrName_1 = attrs[i + 2];\n                var attrVal = attrs[i + 3];\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                i += 4;\n            }\n            else {\n                // Standard attributes\n                var attrVal = attrs[i + 1];\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n                i += 2;\n            }\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var node = previousOrParentNode;\n    var native = node.native;\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n        var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        storeCleanupFn(viewData, cleanupFn);\n    }\n    else {\n        var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        var cleanupInstances = getCleanup(viewData);\n        cleanupInstances.push(wrappedListener);\n        if (firstTemplatePass) {\n            getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n        }\n    }\n    var tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(outputs[i], directives);\n        var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(view, context, cleanupFn) {\n    if (!view)\n        view = viewData;\n    getCleanup(view).push(context);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var element_1 = load(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                element_1.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                element_1.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var node = load(index);\n    var tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    var inputData = tNode && tNode.inputs;\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                native[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param parent The parent of this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: adjustedIndex,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null,\n        detached: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(inputs[i], directives);\n        directives[inputs[i]][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    var count = tNodeFlags & 4095;\n    var propStore = null;\n    if (count > 0) {\n        var start = tNodeFlags >> 13;\n        var end = start + count;\n        var isInput = direction === 0;\n        var defs = tView.directives;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nfunction elementClassNamed(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var lElement = load(index);\n        if (value) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nfunction elementClass(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `className`. In the\n        // future\n        // we will add logic here which would work with the animation code.\n        var lElement = load(index);\n        ngDevMode && ngDevMode.rendererSetClassName++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n            lElement.native['className'] = stringify$1(value);\n    }\n}\nfunction elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var lElement = load(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].removeProperty(styleName);\n        }\n        else {\n            var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the LViewData array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nfunction elementStyle(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n        // we will add logic here which would work with the animation code.\n        var lElement = load(index);\n        if (isProceduralRenderer(renderer)) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer.setProperty(lElement.native, 'style', value);\n        }\n        else {\n            var style = lElement.native['style'];\n            for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                var styleName = keys[i];\n                var styleValue = value[styleName];\n                if (styleValue == null) {\n                    ngDevMode && ngDevMode.rendererRemoveStyle++;\n                    style.removeProperty(styleName);\n                }\n                else {\n                    ngDevMode && ngDevMode.rendererSetStyle++;\n                    style.setProperty(styleName, styleValue);\n                }\n            }\n        }\n    }\n}\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNode = createTextNode(value, renderer);\n    var node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, viewData);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n        var existingNode = load(index);\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nfunction directiveCreate(index, directive, directiveDef) {\n    var instance = baseDirectiveCreate(index, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    var tNode = previousOrParentNode.tNode;\n    var isComponent = directiveDef.template;\n    if (isComponent) {\n        addComponentLogic(index, directive, directiveDef);\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(index);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n    }\n    return instance;\n}\nfunction addComponentLogic(directiveIndex, instance, def) {\n    var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    previousOrParentNode.data = componentView;\n    componentView[HOST_NODE] = previousOrParentNode;\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(directiveIndex);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        viewData[DIRECTIVES] = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        var flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        var diPublic = directiveDef.diPublic;\n        if (diPublic)\n            diPublic(directiveDef);\n    }\n    if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param parentLNode the LNode in which the container's content will be rendered\n * @param currentView The parent view of the LContainer\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(parentLNode, currentView, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n        parentLNode :\n        null;\n    if (renderParent && renderParent.tNode.type === 2 /* View */) {\n        renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n    }\n    return [\n        isForViewContainerRef ? null : 0,\n        currentView,\n        null,\n        null,\n        [],\n        renderParent\n    ];\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n    var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n    var lContainer = createLContainer(currentParent, viewData);\n    var comment = renderer.createComment(ngDevMode ? 'container' : '');\n    var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n    appendChild(getParentLNode(node), comment, viewData);\n    if (firstTemplatePass) {\n        node.tNode.tViews = template ?\n            createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n            [];\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n    var queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    previousOrParentNode = load(index);\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    previousOrParentNode.data[ACTIVE_INDEX] = 0;\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(viewData, tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var container = previousOrParentNode;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var nextIndex = container.data[ACTIVE_INDEX];\n    // remove extra views at the end of the container\n    while (nextIndex < container.data[VIEWS].length) {\n        removeView(container, nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n */\nfunction refreshDynamicEmbeddedViews(lViewData) {\n    for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n        // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n            var container_1 = current;\n            for (var i = 0; i < container_1[VIEWS].length; i++) {\n                var lViewNode = container_1[VIEWS][i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                var dynamicViewData = lViewNode.data;\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    var views = containerNode.data[VIEWS];\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i].data[TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var lContainer = container.data;\n    var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer[QUERIES]) {\n            newView[QUERIES] = lContainer[QUERIES].createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    if (container) {\n        if (creationMode) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n        }\n        lContainer[ACTIVE_INDEX]++;\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tNode.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] =\n            createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    previousOrParentNode = viewData[HOST_NODE];\n    leaveView(viewData[PARENT]);\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n */\nfunction componentRefresh(directiveIndex, adjustedElementIndex) {\n    ngDevMode && assertDataInRange(adjustedElementIndex);\n    var element = viewData[adjustedElementIndex];\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode &&\n        assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n    var hostView = element.data;\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, directives);\n        detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var distributedNodes = new Array(noOfNodeBuckets);\n    for (var i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var componentNode = findComponentHost(viewData);\n    var componentChild = getChildLNode(componentNode);\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors) {\n            var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = getNextLNode(componentChild);\n    }\n    ngDevMode && assertDataNext(index + HEADER_OFFSET);\n    store(index, distributedNodes);\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction addToProjectionList(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n    // `<ng-content>` has no content\n    isParent = false;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var componentNode = findComponentHost(viewData);\n    var componentLView = componentNode.data;\n    var distributedNodes = loadInternal(localIndex, componentLView);\n    var nodesForSelector = distributedNodes[selectorIndex];\n    var currentParent = getParentLNode(node);\n    var canInsert = canInsertNativeNode(currentParent, viewData);\n    var renderParent = currentParent.tNode.type === 2 /* View */ ?\n        getParentLNode(currentParent).data[RENDER_PARENT] :\n        currentParent;\n    for (var i = 0; i < nodesForSelector.length; i++) {\n        var nodeToProject = nodesForSelector[i];\n        var head = nodeToProject;\n        var tail = nodeToProject;\n        if (nodeToProject.tNode.type === 1 /* Projection */) {\n            var previouslyProjected = nodeToProject.data;\n            head = previouslyProjected.head;\n            tail = previouslyProjected.tail;\n        }\n        addToProjectionList(node, head, tail);\n        if (canInsert) {\n            var currentNode = head;\n            while (currentNode) {\n                appendProjectedNode(currentNode, currentParent, viewData, renderParent);\n                currentNode = currentNode === tail ? null : currentNode.pNextOrParent;\n            }\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lViewData LViewData for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lViewData) {\n    var viewRootLNode = lViewData[HOST_NODE];\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n        lViewData = lViewData[PARENT];\n        viewRootLNode = lViewData[HOST_NODE];\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return viewRootLNode;\n}\n/**\n * Adds LViewData or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LViewData or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n * @param state The LViewData or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(currentView, adjustedHostIndex, state) {\n    if (currentView[TAIL]) {\n        currentView[TAIL][NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    currentView[TAIL] = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LViewData dirty. */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n        node.data[FLAGS] |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(view) {\n    var currentView = view;\n    while (currentView[PARENT] != null) {\n        currentView[FLAGS] |= 4 /* Dirty */;\n        currentView = currentView[PARENT];\n    }\n    currentView[FLAGS] |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n    scheduleTick(currentView[CONTEXT]);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tickRootContext(rootContext);\n            res_1(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\n\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        var hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param component any component\n */\nfunction getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    var lViewData = lElementNode.view;\n    while (lViewData[PARENT]) {\n        lViewData = lViewData[PARENT];\n    }\n    return lViewData;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode &&\n        assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n    detectChangesInternal(hostNode.data, hostNode, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    var oldView = enterView(hostView, hostNode);\n    var hostTView = hostView[TVIEW];\n    var template = hostTView.template;\n    var viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, hostView[FLAGS], component);\n        template(getRenderFlags(hostView), component);\n        refreshView();\n        updateViewQuery(viewQuery, component);\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\nfunction createViewQuery(viewQuery, flags, component) {\n    if (viewQuery && (flags & 1 /* CreationMode */)) {\n        viewQuery(1 /* Create */, component);\n    }\n}\nfunction updateViewQuery(viewQuery, component) {\n    if (viewQuery) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n    if (tView.bindingStartIndex === -1) {\n        tView.bindingStartIndex = viewData.length;\n    }\n    viewData[BINDING_INDEX] = tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    viewData.length += numSlots;\n    viewData.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {@link reserveSlots}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    var currentSlot = viewData[BINDING_INDEX];\n    viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n */\nfunction restoreBindingIndex(index) {\n    viewData[BINDING_INDEX] = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation bindings with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    viewData[adjustedIndex] = value;\n}\n/** Retrieves a value from current `viewData`. */\nfunction load(index) {\n    return loadInternal(index, viewData);\n}\n/** Retrieves a value from any `LViewData`. */\nfunction loadInternal(index, arr) {\n    ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n    return arr[index + HEADER_OFFSET];\n}\n/** Retrieves a value from the `directives` array. */\nfunction loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, directives);\n    return directives[index];\n}\n/** Gets the current binding value and increments the binding index. */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n    ngDevMode &&\n        assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return viewData[viewData[BINDING_INDEX]++];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (viewData[BINDING_INDEX] === -1)\n        initBindings();\n    var bindingIndex = viewData[BINDING_INDEX];\n    if (bindingIndex >= viewData.length) {\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else if (isDifferent(viewData[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else {\n        viewData[BINDING_INDEX]++;\n        return false;\n    }\n    return true;\n}\n/** Updates binding if changed, then returns the latest value. */\nfunction checkAndUpdateBinding(value) {\n    bindingUpdated(value);\n    return value;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(exp1, exp2) {\n    var different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\nfunction getTView() {\n    return tView;\n}\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in directives[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        var startIndex = tView.bindingStartIndex - slotOffset;\n        for (var i = 0; i < numSlots; i++) {\n            assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    var lElementNode = component[NG_HOST_SYMBOL];\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nvar ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = componentType.ngComponentDef;\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var component;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView[INJECTOR$1] = opts.injector || null;\n    var oldView = enterView(rootView, null);\n    var elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(elementNode.data, elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\nfunction createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component) {\n    var rootContext = getRootView(component)[CONTEXT];\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME$1 = {};\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\nvar EMPTY_ARRAY$1 = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE$1 in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/**\n* Injectable decorator and metadata.\n*\n* @Annotation\n*/\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n    return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$2 = {};\nvar EMPTY_ARRAY$2 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$2 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$2 === undefined) {\n        NULL_INJECTOR$2 = new NullInjector();\n    }\n    return NULL_INJECTOR$2;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @experimental\n */\nfunction createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        additionalProviders &&\n            deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) &&\n                        token.ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = defOrWrappedDef.ngInjectorDef;\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$2;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, throw.\n        if (def == null) {\n            throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$2) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$2;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefRecord(token) {\n    var def = token.ngInjectableDef;\n    if (def === undefined) {\n        throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    return makeRecord(def.factory);\n}\nfunction providerToRecord(provider) {\n    var token = resolveForwardRef(provider);\n    var value = NOT_YET;\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = provider.useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!value.useExisting;\n}\nfunction isFactoryProvider(value) {\n    return !!value.useFactory;\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n */\n\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using the deprecated [Shadow DOM\n     * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    /**\n     * Use Shadow DOM to encapsulate styles.\n     *\n     * For the DOM this means using modern [Shadow\n     * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     *\n     * ### Example\n     * {@example core/ts/metadata/encapsulation.ts region='longform'}\n     */\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        var _a;\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    exports.ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var pipeTypes = componentDefinition.pipes;\n    var directiveTypes = componentDefinition.directives;\n    var declaredInputs = {};\n    var def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs, declaredInputs),\n        declaredInputs: declaredInputs,\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs || null,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null,\n        pipeDefs: pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null,\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n        features: componentDefinition.features || null,\n    };\n    var feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nfunction defineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || [],\n        declarations: def.declarations || [],\n        imports: def.imports || [],\n        exports: def.exports || [],\n        transitiveCompileScopes: null,\n    };\n    return res;\n}\nvar EMPTY$1 = {};\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName')\n *   propName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   a0: 'propName1',\n *   b1: ['publicName', 'propName2'],\n * }\n * ```\n *\n * becomes\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'publicName': 'b1'\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in:\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'propName2': 'b1'\n * }\n * ```\n *\n\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY$1;\n    var newLookup = {};\n    for (var minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            var publicName = obj[minifiedKey];\n            var declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[declaredName] = minifiedKey);\n            }\n        }\n    }\n    return newLookup;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nfunction fillProperties(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n/**\n * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n * @param definition The definition to examine\n */\nfunction isComponentDef(definition) {\n    var def = definition;\n    return typeof def.template === 'function';\n}\nfunction getSuperType(type) {\n    return Object.getPrototypeOf(type.prototype).constructor;\n}\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n */\nfunction InheritDefinitionFeature(definition) {\n    var superType = getSuperType(definition.type);\n    var superDef = undefined;\n    var _loop_1 = function () {\n        if (isComponentDef(definition)) {\n            superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n        }\n        else {\n            if (superType.ngComponentDef) {\n                throw new Error('Directives cannot inherit Components');\n            }\n            superDef = superType.ngDirectiveDef;\n        }\n        if (superDef) {\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, superDef.inputs);\n            fillProperties(definition.declaredInputs, superDef.declaredInputs);\n            fillProperties(definition.outputs, superDef.outputs);\n            // Merge hostBindings\n            var prevHostBindings_1 = definition.hostBindings;\n            var superHostBindings_1 = superDef.hostBindings;\n            if (superHostBindings_1) {\n                if (prevHostBindings_1) {\n                    definition.hostBindings = function (directiveIndex, elementIndex) {\n                        superHostBindings_1(directiveIndex, elementIndex);\n                        prevHostBindings_1(directiveIndex, elementIndex);\n                    };\n                }\n                else {\n                    definition.hostBindings = superHostBindings_1;\n                }\n            }\n            // Inherit hooks\n            // Assume super class inheritance feature has already run.\n            definition.afterContentChecked =\n                definition.afterContentChecked || superDef.afterContentChecked;\n            definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n            definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n            definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n            definition.doCheck = definition.doCheck || superDef.doCheck;\n            definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n            definition.onInit = definition.onInit || superDef.onInit;\n            // Run parent features\n            var features = superDef.features;\n            if (features) {\n                try {\n                    for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                        var feature = features_1_1.value;\n                        if (feature && feature !== InheritDefinitionFeature) {\n                            feature(definition);\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        }\n        else {\n            // Even if we don't have a definition, check the type for the hooks and use those if need be\n            var superPrototype = superType.prototype;\n            if (superPrototype) {\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superPrototype.afterContentChecked;\n                definition.afterContentInit =\n                    definition.afterContentInit || superPrototype.afterContentInit;\n                definition.afterViewChecked =\n                    definition.afterViewChecked || superPrototype.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                definition.onInit = definition.onInit || superPrototype.onInit;\n            }\n        }\n        superType = Object.getPrototypeOf(superType);\n        var e_1, _a;\n    };\n    while (superType && !superDef) {\n        _loop_1();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n */\nfunction NgOnChangesFeature(definition) {\n    var declaredToMinifiedInputs = definition.declaredInputs;\n    var proto = definition.type.prototype;\n    var _loop_1 = function (declaredName) {\n        if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n            var minifiedKey = declaredToMinifiedInputs[declaredName];\n            var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n            // Walk the prototype chain to see if we find a property descriptor\n            // That way we can honor setters and getters that were inherited.\n            var originalProperty = undefined;\n            var checkProto = proto;\n            while (!originalProperty && checkProto &&\n                Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                checkProto = Object.getPrototypeOf(checkProto);\n            }\n            var getter = originalProperty && originalProperty.get;\n            var setter_1 = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minifiedKey, {\n                get: getter ||\n                    (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        simpleChanges = {};\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                    var currentChange = simpleChanges[declaredName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[declaredName] =\n                            new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey_1] = value;\n                    }\n                    if (setter_1)\n                        setter_1.call(this, value);\n                }\n            });\n        }\n    };\n    for (var declaredName in declaredToMinifiedInputs) {\n        _loop_1(declaredName);\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n}\nfunction onChangesWrapper(delegateHook) {\n    return function () {\n        var simpleChanges = this[PRIVATE_PREFIX];\n        if (simpleChanges != null) {\n            this.ngOnChanges(simpleChanges);\n            this[PRIVATE_PREFIX] = null;\n        }\n        if (delegateHook)\n            delegateHook.apply(this);\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this.context = context;\n    }\n    /** @internal */\n    ViewRef.prototype._setComponentContext = function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n    ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n    return ViewRef;\n}());\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, viewNode.data, context) || this;\n        _this._viewContainerRef = null;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    EmbeddedViewRef.prototype.destroy = function () {\n        if (this._viewContainerRef && viewAttached(this._view)) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        _super.prototype.destroy.call(this);\n    };\n    EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n    return EmbeddedViewRef;\n}(ViewRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nfunction bloomAdd(injector, type) {\n    var id = type[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    // This means that after 255, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var nodeInjector = node.nodeInjector;\n    var parent = getParentLNode(node);\n    var parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return nodeInjector;\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    var lElement = getPreviousOrParentNode();\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var tElement = lElement.tNode;\n    ngDevMode && assertDefined(tElement, 'expecting tNode');\n    var attrs = tElement.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n    }\n    return null;\n}\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var hostNode = getClosestComponentAncestor(currentNode);\n    var hostInjector = hostNode.nodeInjector;\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef(hostNode.data, hostNode\n            .view[DIRECTIVES][hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view[HOST_NODE];\n    }\n    return node;\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095;\n            if (count !== 0) {\n                var start = nodeFlags >> 13;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return getDirectiveInstance(node.view[DIRECTIVES][i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}\nfunction searchMatchesQueuedForCreation(node, token) {\n    var matches = node.view[TVIEW].currentMatches;\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var id = type[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @returns An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n    while (injector) {\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value = void 0;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n}\n\n\n\n\n/** A ref to a node's native element. */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        var vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        var hostParent = getParentLNode(vcRefHost);\n        var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n        var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n        appendChild(hostParent, comment, vcRefHost.view);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        var hostTNode = vcRefHost.tNode;\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n        di.viewContainerRef = new ViewContainerRef(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    ViewContainerRef.prototype.clear = function () {\n        var lContainer = this._lContainerNode.data;\n        while (lContainer[VIEWS].length) {\n            this.remove(0);\n        }\n    };\n    ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n    Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n        get: function () {\n            var lContainer = this._lContainerNode.data;\n            return lContainer[VIEWS].length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var adjustedIdx = this._adjustIndex(index);\n        var viewRef = templateRef\n            .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n        viewRef.attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var lViewNode = viewRef._lViewNode;\n        var adjustedIdx = this._adjustIndex(index);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        var views = this._lContainerNode.data[VIEWS];\n        var beforeNode = adjustedIdx + 1 < views.length ?\n            (getChildLNode(views[adjustedIdx + 1])).native :\n            this._lContainerNode.native;\n        addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n        viewRef.attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n        var index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    };\n    ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n    ViewContainerRef.prototype.remove = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    };\n    ViewContainerRef.prototype.detach = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        var lViewNode = detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    };\n    ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n        if (shift === void 0) { shift = 0; }\n        if (index == null) {\n            return this._lContainerNode.data[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n    };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        var hostNode = di.node;\n        var hostTNode = hostNode.tNode;\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n    }\n    return di.templateRef;\n}\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef(elementRef, _tView, _renderer, _queries) {\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    TemplateRef.prototype.createEmbeddedView = function (context, containerNode, index) {\n        var viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n        if (containerNode) {\n            insertView(containerNode, viewNode, index);\n        }\n        renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n        return new EmbeddedViewRef(viewNode, this._tView.template, context);\n    };\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This feature publishes the directive (or component) into the DI system, making it visible to\n * others for injection.\n *\n * @param definition\n */\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\nvar ComponentFactory$1 = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\nvar ComponentFactoryResolver$1 = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * @experimental\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * @experimental\n */\n\n(function (RendererStyleFlags2) {\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n/**\n * @experimental\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver$$1, _super);\n    function ComponentFactoryResolver$$1() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = component.ngComponentDef;\n        return new ComponentFactory$$1(componentDef);\n    };\n    return ComponentFactoryResolver$$1;\n}(ComponentFactoryResolver$1));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nvar ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory$$1, _super);\n    function ComponentFactory$$1(componentDef) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.componentType = componentDef.type;\n        _this.selector = componentDef.selectors[0][0];\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n        ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n        var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n        var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n        // The first index of the first selector is the tag name.\n        var componentTag = this.componentDef.selectors[0][0];\n        var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n        // rootView is the parent when bootstrapping\n        var oldView = enterView(rootView, null);\n        var component;\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        // TODO(misko): this is the wrong injector here.\n        return new ComponentRef$$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n    };\n    return ComponentFactory$$1;\n}(ComponentFactory$1));\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef$$1, _super);\n    function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n        var _this = _super.call(this) || this;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n         * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n         * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n         * given component won't work (as these are always called at the level above a component).\n         *\n         * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n         * component instance. So passing in the root view (1 level above the component) is sufficient.\n         * We might  want to think about creating a fake component for the top level? Or overwrite\n         * detectChanges with a function that calls tickRootContext? */\n        _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n        _this.injector = injector;\n        _this.location = new ElementRef$1(hostNode);\n        _this.componentType = componentType;\n        return _this;\n    }\n    ComponentRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    ComponentRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return ComponentRef$$1;\n}(ComponentRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar i18nTagRegex = /\\{\\$([^}]+)\\}/g;\n/**\n * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n * indexes of their corresponding expression nodes to return a list of instructions for each\n * template function.\n *\n * Because embedded templates have different indexes for each placeholder, each parameter (except\n * the translation) is an array, where each value corresponds to a different template, by order of\n * appearance.\n *\n * @param translation A translation string where placeholders are represented by `{$name}`\n * @param elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param tmplContainers An array of template container placeholders whose content should be ignored\n * when generating the instructions for their parent template.\n * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @returns A list of instructions used to translate each template.\n */\nfunction i18nMapping(translation, elements, expressions, tmplContainers, lastChildIndex) {\n    var translationParts = translation.split(i18nTagRegex);\n    var instructions = [];\n    generateMappingInstructions(0, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n    return instructions;\n}\n/**\n * Internal function that reads the translation parts and generates a set of instructions for each\n * template.\n *\n * See `i18nMapping()` for more details.\n *\n * @param index The current index in `translationParts`.\n * @param translationParts The translation string split into an array of placeholders and text\n * elements.\n * @param instructions The current list of instructions to update.\n * @param elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param tmplContainers An array of template container placeholders whose content should be ignored\n * when generating the instructions for their parent template.\n * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n * @returns the current index in `translationParts`\n */\nfunction generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex) {\n    var tmplIndex = instructions.length;\n    var tmplInstructions = [];\n    var phVisited = [];\n    var openedTagCount = 0;\n    var maxIndex = 0;\n    instructions.push(tmplInstructions);\n    for (; index < translationParts.length; index++) {\n        var value = translationParts[index];\n        // Odd indexes are placeholders\n        if (index & 1) {\n            var phIndex = void 0;\n            if (elements && elements[tmplIndex] &&\n                typeof (phIndex = elements[tmplIndex][value]) !== 'undefined') {\n                // The placeholder represents a DOM element\n                // Add an instruction to move the element\n                tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                phVisited.push(value);\n                openedTagCount++;\n            }\n            else if (expressions && expressions[tmplIndex] &&\n                typeof (phIndex = expressions[tmplIndex][value]) !== 'undefined') {\n                // The placeholder represents an expression\n                // Add an instruction to move the expression\n                tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                phVisited.push(value);\n            }\n            else { // It is a closing tag\n                tmplInstructions.push(-2147483648 /* CloseNode */);\n                if (tmplIndex > 0) {\n                    openedTagCount--;\n                    // If we have reached the closing tag for this template, exit the loop\n                    if (openedTagCount === 0) {\n                        break;\n                    }\n                }\n            }\n            if (typeof phIndex !== 'undefined' && phIndex > maxIndex) {\n                maxIndex = phIndex;\n            }\n            if (tmplContainers && tmplContainers.indexOf(value) !== -1 &&\n                tmplContainers.indexOf(value) >= tmplIndex) {\n                index = generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n            }\n        }\n        else if (value) {\n            // It's a non-empty string, create a text node\n            tmplInstructions.push(536870912 /* Text */, value);\n        }\n    }\n    // Check if some elements from the template are missing from the translation\n    if (elements) {\n        var tmplElements = elements[tmplIndex];\n        if (tmplElements) {\n            var phKeys = Object.keys(tmplElements);\n            for (var i = 0; i < phKeys.length; i++) {\n                var ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    var index_1 = tmplElements[ph];\n                    // Add an instruction to remove the element\n                    tmplInstructions.push(index_1 | -1610612736 /* RemoveNode */);\n                    if (index_1 > maxIndex) {\n                        maxIndex = index_1;\n                    }\n                }\n            }\n        }\n    }\n    // Check if some expressions from the template are missing from the translation\n    if (expressions) {\n        var tmplExpressions = expressions[tmplIndex];\n        if (tmplExpressions) {\n            var phKeys = Object.keys(tmplExpressions);\n            for (var i = 0; i < phKeys.length; i++) {\n                var ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    var index_2 = tmplExpressions[ph];\n                    if (ngDevMode) {\n                        assertLessThan(index_2.toString(2).length, 28, \"Index \" + index_2 + \" is too big and will overflow\");\n                    }\n                    // Add an instruction to remove the expression\n                    tmplInstructions.push(index_2 | -1610612736 /* RemoveNode */);\n                    if (index_2 > maxIndex) {\n                        maxIndex = index_2;\n                    }\n                }\n            }\n        }\n    }\n    if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n        // The current parent is an ng-container and it has more children after the translation that we\n        // need to append to keep the order of the DOM nodes correct\n        for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n            if (ngDevMode) {\n                assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n            }\n            // We consider those additional placeholders as expressions because we don't care about\n            // their children, all we need to do is to append them\n            tmplInstructions.push(i | 1610612736 /* Expression */);\n        }\n    }\n    return index;\n}\nfunction appendI18nNode(node, parentNode, previousNode) {\n    if (ngDevMode) {\n        ngDevMode.rendererMoveNode++;\n    }\n    var viewData = getViewData();\n    appendChild(parentNode, node.native || null, viewData);\n    // On first pass, re-organize node tree to put this node in the correct position.\n    var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n    if (firstTemplatePass) {\n        node.tNode.next = null;\n        if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n            node.tNode.next = parentNode.tNode.child;\n            parentNode.tNode.child = node.tNode;\n        }\n        else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n            node.tNode.next = previousNode.tNode.next;\n            previousNode.tNode.next = node.tNode;\n        }\n    }\n    // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n    if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n        // (node.native as RComment).textContent = 'test';\n        // console.log(node.native);\n        appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n        if (firstTemplatePass) {\n            node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n            node.dynamicLContainerNode.tNode.parent = node.tNode;\n        }\n        return node.dynamicLContainerNode;\n    }\n    return node;\n}\n/**\n * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n *\n * @param startIndex Index of the first element to translate (for instance the first child of the\n * element with the i18n attribute).\n * @param instructions The list of instructions to apply on the current view.\n */\nfunction i18nApply(startIndex, instructions) {\n    var viewData = getViewData();\n    if (ngDevMode) {\n        assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n    }\n    if (!instructions) {\n        return;\n    }\n    var renderer = getRenderer();\n    var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n    var localPreviousNode = localParentNode;\n    resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n    for (var i = 0; i < instructions.length; i++) {\n        var instruction = instructions[i];\n        switch (instruction & -536870912 /* InstructionMask */) {\n            case 1073741824 /* Element */:\n                var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                localParentNode = element$$1;\n                break;\n            case 1610612736 /* Expression */:\n                var expr = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(expr, localParentNode, localPreviousNode);\n                break;\n            case 536870912 /* Text */:\n                if (ngDevMode) {\n                    ngDevMode.rendererCreateTextNode++;\n                }\n                var value = instructions[++i];\n                var textRNode = createTextNode(value, renderer);\n                // If we were to only create a `RNode` then projections won't move the text.\n                // Create text node at the current end of viewData. Must subtract header offset because\n                // createLNode takes a raw index (not adjusted by header offset).\n                var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                resetApplicationState();\n                break;\n            case -2147483648 /* CloseNode */:\n                localPreviousNode = localParentNode;\n                localParentNode = getParentLNode(localParentNode);\n                break;\n            case -1610612736 /* RemoveNode */:\n                if (ngDevMode) {\n                    ngDevMode.rendererRemoveNode++;\n                }\n                var index = instruction & 536870911;\n                var removedNode = load(index);\n                var parentNode = getParentLNode(removedNode);\n                removeChild(parentNode, removedNode.native || null, viewData);\n                // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                    removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                    removedNode.dynamicLContainerNode.tNode.detached = true;\n                    removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                }\n                break;\n        }\n    }\n}\n/**\n * Takes a translation string and the initial list of expressions and returns a list of instructions\n * that will be used to translate an attribute.\n * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n * value will be concatenated into the final translation.\n */\nfunction i18nExpMapping(translation, placeholders) {\n    var staticText = translation.split(i18nTagRegex);\n    // odd indexes are placeholders\n    for (var i = 1; i < staticText.length; i += 2) {\n        staticText[i] = placeholders[staticText[i]];\n    }\n    return staticText;\n}\n/**\n * Checks if the value of up to 8 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation(instructions, numberOfExp, v0, v1, v2, v3, v4, v5, v6, v7) {\n    var different = bindingUpdated(v0);\n    if (numberOfExp > 1) {\n        different = bindingUpdated(v1) || different;\n        if (numberOfExp > 2) {\n            different = bindingUpdated(v2) || different;\n            if (numberOfExp > 3) {\n                different = bindingUpdated(v3) || different;\n                if (numberOfExp > 4) {\n                    different = bindingUpdated(v4) || different;\n                    if (numberOfExp > 5) {\n                        different = bindingUpdated(v5) || different;\n                        if (numberOfExp > 6) {\n                            different = bindingUpdated(v6) || different;\n                            if (numberOfExp > 7) {\n                                different = bindingUpdated(v7) || different;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    var res = '';\n    for (var i = 0; i < instructions.length; i++) {\n        var value = void 0;\n        // Odd indexes are placeholders\n        if (i & 1) {\n            switch (instructions[i]) {\n                case 0:\n                    value = v0;\n                    break;\n                case 1:\n                    value = v1;\n                    break;\n                case 2:\n                    value = v2;\n                    break;\n                case 3:\n                    value = v3;\n                    break;\n                case 4:\n                    value = v4;\n                    break;\n                case 5:\n                    value = v5;\n                    break;\n                case 6:\n                    value = v6;\n                    break;\n                case 7:\n                    value = v7;\n                    break;\n            }\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Create a translated interpolation binding with a variable number of expressions.\n *\n * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n * because there is no need to create an array of expressions and iterate over it.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolationV(instructions, values) {\n    var different = false;\n    for (var i = 0; i < values.length; i++) {\n        // Check if bindings have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    var res = '';\n    for (var i = 0; i < instructions.length; i++) {\n        // Odd indexes are placeholders\n        if (i & 1) {\n            res += stringify$1(values[instructions[i]]);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n */\nvar NgModuleRef$1 = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @experimental\n */\nvar NgModuleFactory$1 = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver$1,\n    useFactory: function () { return new ComponentFactoryResolver$$1(); },\n    deps: [],\n};\nvar NgModuleRef$$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$$1, _super);\n    function NgModuleRef$$1(ngModuleType, parentInjector) {\n        var _this = _super.call(this) || this;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.destroyCbs = [];\n        var ngModuleDef = ngModuleType.ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        var additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: NgModuleRef$1,\n                useValue: _this,\n            }\n        ];\n        _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        _this.instance = _this.injector.get(ngModuleType);\n        _this.componentFactoryResolver = new ComponentFactoryResolver$$1();\n        return _this;\n    }\n    NgModuleRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$$1;\n}(NgModuleRef$1));\nvar NgModuleFactory$$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory$$1, _super);\n    function NgModuleFactory$$1(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    NgModuleFactory$$1.prototype.create = function (parentInjector) {\n        return new NgModuleRef$$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory$$1;\n}(NgModuleFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = getCreationMode() ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated(exp) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated2(exp1, exp2);\n    var value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    var value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getTView();\n    var pipeDef;\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[adjustedIndex];\n    }\n    var pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\nfunction isPure(index) {\n    return getTView().data[index + HEADER_OFFSET].pure;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * @usageNotes\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs.Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n    LQueries_.prototype.child = function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    LQueries_.prototype.container = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    };\n    LQueries_.prototype.addNode = function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    LQueries_.prototype.removeView = function () {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    var defs = node.view[TVIEW].directives;\n    var flags = node.tNode.flags;\n    var count = flags & 4095;\n    var start = flags >> 13;\n    var end = start + count;\n    for (var i = start; i < end; i++) {\n        var def = defs[i];\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var matchingIdx = getIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view[DIRECTIVES][matchingIdx];\n        }\n    }\n    return null;\n}\nfunction add(query, node) {\n    var nodeInjector = getOrCreateNodeInjectorForNode(node);\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var queryList = new QueryList();\n    var queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(null, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreEnv = {\n    'ÉµdefineComponent': defineComponent,\n    'ÉµdefineDirective': defineDirective,\n    'defineInjectable': defineInjectable,\n    'defineInjector': defineInjector,\n    'ÉµdefineNgModule': defineNgModule,\n    'ÉµdefinePipe': definePipe,\n    'ÉµdirectiveInject': directiveInject,\n    'inject': inject,\n    'ÉµinjectAttribute': injectAttribute,\n    'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n    'ÉµinjectElementRef': injectElementRef,\n    'ÉµinjectTemplateRef': injectTemplateRef,\n    'ÉµinjectViewContainerRef': injectViewContainerRef,\n    'ÉµNgOnChangesFeature': NgOnChangesFeature,\n    'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n    'Éµa': elementAttribute,\n    'Éµb': bind,\n    'ÉµC': container,\n    'ÉµcR': containerRefreshStart,\n    'Éµcr': containerRefreshEnd,\n    'Éµd': loadDirective,\n    'ÉµNH': namespaceHTML,\n    'ÉµNM': namespaceMathML,\n    'ÉµNS': namespaceSVG,\n    'ÉµE': elementStart,\n    'Éµe': elementEnd,\n    'ÉµEe': element,\n    'Éµf0': pureFunction0,\n    'Éµf1': pureFunction1,\n    'Éµf2': pureFunction2,\n    'Éµf3': pureFunction3,\n    'Éµf4': pureFunction4,\n    'Éµf5': pureFunction5,\n    'Éµf6': pureFunction6,\n    'Éµf7': pureFunction7,\n    'Éµf8': pureFunction8,\n    'ÉµfV': pureFunctionV,\n    'Éµi1': interpolation1,\n    'Éµi2': interpolation2,\n    'Éµi3': interpolation3,\n    'Éµi4': interpolation4,\n    'Éµi5': interpolation5,\n    'Éµi6': interpolation6,\n    'Éµi7': interpolation7,\n    'Éµi8': interpolation8,\n    'ÉµiV': interpolationV,\n    'Éµk': elementClass,\n    'Éµkn': elementClassNamed,\n    'ÉµL': listener,\n    'Éµld': load,\n    'ÉµP': projection,\n    'Éµp': elementProperty,\n    'Éµpb1': pipeBind1,\n    'Éµpb2': pipeBind2,\n    'Éµpb3': pipeBind3,\n    'Éµpb4': pipeBind4,\n    'ÉµpbV': pipeBindV,\n    'ÉµpD': projectionDef,\n    'ÉµPp': pipe,\n    'ÉµQ': query,\n    'ÉµqR': queryRefresh,\n    'ÉµrS': reserveSlots,\n    'Éµs': elementStyle,\n    'Éµsn': elementStyleNamed,\n    'Éµst': store,\n    'ÉµT': text,\n    'Éµt': textBinding,\n    'ÉµV': embeddedViewStart,\n    'Éµv': embeddedViewEnd,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TARGET = {};\nvar NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\nvar NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\nvar NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\nvar NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\nvar NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\nvar NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n *\n */\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n *\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    return deps.map(function (dep) { return reflectDependency(dep); });\n}\nfunction reflectDependency(dep) {\n    var meta = {\n        token: new compiler.LiteralExpr(null),\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        if (token === ElementRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n        }\n        else if (token === Injector) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n        }\n        else if (token === TemplateRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n        }\n        else if (token === ViewContainerRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n        }\n        else {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        }\n        meta.token = new compiler.WrappedNodeExpr(token);\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            var param = dep[j];\n            if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = new compiler.WrappedNodeExpr(param.token);\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = new compiler.LiteralExpr(param.attributeName);\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY$3 = [];\nfunction compileNgModule$1(type, ngModule) {\n    var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n    var ngModuleDef = null;\n    Object.defineProperty(type, NG_MODULE_DEF, {\n        get: function () {\n            if (ngModuleDef === null) {\n                var meta = {\n                    type: wrap(type),\n                    bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                    declarations: declarations.map(wrap),\n                    imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    emitInline: true,\n                };\n                var res = compiler.compileNgModule(meta);\n                ngModuleDef =\n                    compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n            }\n            return ngModuleDef;\n        },\n    });\n    var ngInjectorDef = null;\n    Object.defineProperty(type, NG_INJECTOR_DEF, {\n        get: function () {\n            if (ngInjectorDef === null) {\n                var meta = {\n                    name: type.name,\n                    type: wrap(type),\n                    deps: reflectDependencies(type),\n                    providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                    imports: new compiler.WrappedNodeExpr([\n                        ngModule.imports || EMPTY_ARRAY$3,\n                        ngModule.exports || EMPTY_ARRAY$3,\n                    ]),\n                };\n                var res = compiler.compileInjector(meta);\n                ngInjectorDef =\n                    compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n            }\n            return ngInjectorDef;\n        },\n    });\n    declarations.forEach(function (declaration) {\n        // Some declared components may be compiled asynchronously, and thus may not have their\n        // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n        // the `ngSelectorScope` property of the declared type.\n        if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n            // An `ngComponentDef` field exists - go ahead and patch the component directly.\n            patchComponentDefWithScope(declaration.ngComponentDef, type);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            declaration.ngSelectorScope = type;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nfunction patchComponentDefWithScope(componentDef, module) {\n    componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n        .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n        .filter(function (def) { return !!def; }); };\n    componentDef.pipeDefs = function () {\n        return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n    };\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nfunction transitiveScopesFor(moduleType) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    var def = moduleType.ngModuleDef;\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    var scopes = {\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    def.declarations.forEach(function (declared) {\n        var declaredWithDefs = declared;\n        if (declaredWithDefs.ngPipeDef !== undefined) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    def.imports.forEach(function (imported) {\n        var importedTyped = imported;\n        if (!isNgModule(importedTyped)) {\n            throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n        }\n        // When this module imports another, the imported module's exported directives and pipes are\n        // added to the compilation scope of this module.\n        var importedScope = transitiveScopesFor(importedTyped);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    def.exports.forEach(function (exported) {\n        var exportedTyped = exported;\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedTyped)) {\n            // When this module exports another, the exported module's exported directives and pipes are\n            // added to both the compilation and exported scopes of this module.\n            var exportedScope = transitiveScopesFor(exportedTyped);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (exportedTyped.ngPipeDef !== undefined) {\n            scopes.exported.pipes.add(exportedTyped);\n        }\n        else {\n            scopes.exported.directives.add(exportedTyped);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\nfunction flatten$1(values) {\n    var out = [];\n    values.forEach(function (value) {\n        if (Array.isArray(value)) {\n            out.push.apply(out, __spread(flatten$1(value)));\n        }\n        else {\n            out.push(value);\n        }\n    });\n    return out;\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction wrap(value) {\n    return new compiler.WrappedNodeExpr(value);\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return value.ngModuleDef !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nfunction compileComponent(type, metadata) {\n    var def = null;\n    // Metadata may have resources which need to be resolved.\n    maybeQueueResolutionOfComponentResources(metadata);\n    Object.defineProperty(type, NG_COMPONENT_DEF, {\n        get: function () {\n            if (def === null) {\n                if (componentNeedsResolution(metadata)) {\n                    var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                    if (metadata.templateUrl) {\n                        error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                    }\n                    if (metadata.styleUrls && metadata.styleUrls.length) {\n                        error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                    }\n                    error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                    throw new Error(error.join('\\n'));\n                }\n                // The ConstantPool is a requirement of the JIT'er.\n                var constantPool = new compiler.ConstantPool();\n                // Parse the template and check for errors.\n                var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                    preserveWhitespaces: metadata.preserveWhitespaces || false,\n                });\n                if (template.errors !== undefined) {\n                    var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                    throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                }\n                // Compile the component metadata, including template, into an expression.\n                // TODO(alxhub): implement inputs, outputs, queries, etc.\n                var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it finishes\n                // compiling.\n                if (hasSelectorScope(type)) {\n                    patchComponentDefWithScope(def, type.ngSelectorScope);\n                }\n            }\n            return def;\n        },\n    });\n}\nfunction hasSelectorScope(component) {\n    return component.ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    var def = null;\n    Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n        get: function () {\n            if (def === null) {\n                var constantPool = new compiler.ConstantPool();\n                var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n            }\n            return def;\n        },\n    });\n}\nfunction extendsDirectlyFromObject(type) {\n    return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    var propMetadata = getReflect().propMetadata(type);\n    var host = extractHostBindings(metadata, propMetadata);\n    var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n    var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n    var inputsFromType = {};\n    var outputsFromType = {};\n    var _loop_1 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isInput(ann)) {\n                    inputsFromType[field] = ann.bindingPropertyName || field;\n                }\n                else if (isOutput(ann)) {\n                    outputsFromType[field] = ann.bindingPropertyName || field;\n                }\n            });\n        }\n    };\n    for (var field in propMetadata) {\n        _loop_1(field);\n    }\n    return {\n        name: type.name,\n        type: new compiler.WrappedNodeExpr(type),\n        selector: metadata.selector,\n        deps: reflectDependencies(type), host: host,\n        inputs: __assign({}, inputsFromMetadata, inputsFromType),\n        outputs: __assign({}, outputsFromMetadata, outputsFromType),\n        queries: [],\n        lifecycle: {\n            usesOnChanges: type.prototype.ngOnChanges !== undefined,\n        },\n        typeSourceSpan: null,\n        usesInheritance: !extendsDirectlyFromObject(type),\n    };\n}\nfunction extractHostBindings(metadata, propMetadata) {\n    // First parse the declarations from the metadata.\n    var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n    if (Object.keys(animations).length > 0) {\n        throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n    }\n    var _loop_2 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isHostBinding(ann)) {\n                    properties[ann.hostPropertyName || field] = field;\n                }\n                else if (isHostListener(ann)) {\n                    listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                }\n            });\n        }\n    };\n    // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n    for (var field in propMetadata) {\n        _loop_2(field);\n    }\n    return { attributes: attributes, listeners: listeners, properties: properties };\n}\nfunction isInput(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction isOutput(value) {\n    return value.ngMetadataName === 'Output';\n}\nfunction isHostBinding(value) {\n    return value.ngMetadataName === 'HostBinding';\n}\nfunction isHostListener(value) {\n    return value.ngMetadataName === 'HostListener';\n}\nfunction parseInputOutputs(values) {\n    return values.reduce(function (map, value) {\n        var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n        map[field] = property || field;\n        return map;\n    }, {});\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nfunction compileInjectable$1(type, meta) {\n    // TODO(alxhub): handle JIT of bare @Injectable().\n    if (!meta) {\n        return;\n    }\n    var def = null;\n    Object.defineProperty(type, NG_INJECTABLE_DEF, {\n        get: function () {\n            if (def === null) {\n                // Check whether the injectable metadata includes a provider specification.\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                var deps = undefined;\n                if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                    deps = reflectDependencies(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps) || [];\n                }\n                // Decide which flavor of factory to generate, based on the provider specified.\n                // Only one of the use* fields should be set.\n                var useClass = undefined;\n                var useFactory = undefined;\n                var useValue = undefined;\n                var useExisting = undefined;\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    useClass = new compiler.WrappedNodeExpr(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                var expression = compiler.compileInjectable({\n                    name: type.name,\n                    type: new compiler.WrappedNodeExpr(type),\n                    providedIn: computeProvidedIn(meta.providedIn),\n                    useClass: useClass,\n                    useFactory: useFactory,\n                    useValue: useValue,\n                    useExisting: useExisting,\n                    deps: deps,\n                }).expression;\n                def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n            }\n            return def;\n        },\n    });\n}\nfunction computeProvidedIn(providedIn) {\n    if (providedIn == null || typeof providedIn === 'string') {\n        return new compiler.LiteralExpr(providedIn);\n    }\n    else {\n        return new compiler.WrappedNodeExpr(providedIn);\n    }\n}\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nvar GET_PROPERTY_NAME$2 = {};\nvar USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$2 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ivyEnabled = true;\nvar R3_COMPILE_COMPONENT = compileComponent;\nvar R3_COMPILE_DIRECTIVE = compileDirective;\nvar R3_COMPILE_INJECTABLE = compileInjectable$1;\nvar R3_COMPILE_NGMODULE = compileNgModule$1;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Component metadata.\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n/**\n * Component decorator and metadata.\n *\n * @usageNotes\n *\n * ### Using animations\n *\n * The following snippet shows an animation trigger in a component's\n * metadata. The trigger is attached to an element in the component's\n * template, using \"@_trigger_name_\", and a state expression that is evaluated\n * at run time to determine whether the animation should start.\n *\n * ```typescript\n * @Component({\n *   selector: 'animation-cmp',\n *   templateUrl: 'animation-cmp.html',\n *   animations: [\n *     trigger('myTriggerName', [\n *       state('on', style({ opacity: 1 }),\n *       state('off', style({ opacity: 0 }),\n *       transition('on => off', [\n *         animate(\"1s\")\n *       ])\n *     ])\n *   ]\n * })\n * ```\n *\n * ```html\n * <!-- animation-cmp.html -->\n * <div @myTriggerName=\"expression\">...</div>\n * ```\n *\n * ### Preserving whitespace\n *\n * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n * To change the default setting for all components in your application, set\n * the `preserveWhitespaces` option of the AOT compiler.\n *\n * Current implementation removes whitespace characters as follows:\n * - Trims all whitespaces at the beginning and the end of a template.\n * - Removes whitespace-only text nodes. For example,\n * `<button>Action 1</button>  <button>Action 2</button>` becomes\n * `<button>Action 1</button><button>Action 2</button>`.\n * - Replaces a series of whitespace characters in text nodes with a single space.\n * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n * where whitespace characters are significant.\n *\n * Note that these transformations can influence DOM nodes layout, although impact\n * should be minimal.\n *\n * You can override the default behavior to preserve whitespace characters\n * in certain fragments of a template. For example, you can exclude an entire\n * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n *\n * ```html\n * <div ngPreserveWhitespaces>\n *     whitespaces are preserved here\n *     <span>    and here </span>\n * </div>\n * ```\n *\n * You can force a single space to be preserved in a text node by using `&ngsp;`,\n * which is replaced with a space character by Angular's template\n * compiler:\n *\n * ```html\n * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n * the `preserveWhitespaces` option is set to `false`.\n *\n * ```html\n * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * To preserve sequences of whitespace characters, use the\n * `ngPreserveWhitespaces` attribute.\n *\n * @Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n/**\n *\n *\n * @Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n *\n * @Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n *\n * @Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n *\n * @Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n *\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that allows any property on any element.\n *\n * @experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/**\n * @Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n */\nfunction (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n *\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\nvar VERSION = new Version('6.1.0-beta.3+27.sha-c94a2c9');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This file exists to support compilation of @angular/core in Ivy mode.\n *\n * When the Angular compiler processes a compilation unit, it normally writes imports to\n * @angular/core. When compiling the core package itself this strategy isn't usable. Instead, the\n * compiler writes imports to this file.\n *\n * Only a subset of such imports are supported - core is not allowed to declare components or pipes.\n * A check in ngtsc's translator.ts validates this condition.\n *\n * The below symbols are used for @Injectable and @NgModule compilation.\n */\n/**\n * The existence of this constant (in this particular file) informs the Angular compiler that the\n * current program is actually @angular/core, which needs to be compiled specially.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory() { return new ApplicationInitStatus(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory() { return new Console(); }, providedIn: null });\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n    Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory() { return new Compiler(); }, providedIn: null });\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: t.data.target\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory() { return new Testability(inject(NgZone)); }, providedIn: null });\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory() { return new TestabilityRegistry(); }, providedIn: null });\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var compilerFactory = this.injector.get(CompilerFactory);\n        var options = optionsReducer({}, compilerOptions);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory() { return new PlatformRef(inject(Injector)); }, providedIn: null });\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new rxjs.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new rxjs.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory$1) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef$1);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory() { return new ApplicationRef(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver$1), inject(ApplicationInitStatus)); }, providedIn: null });\n    return ApplicationRef;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nfunction getModuleFactory(id) {\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n */\nvar QueryList$1 = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten$2(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory() { return new SystemJsNgModuleLoader(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * @usageNotes\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two `TemplateRef`s:\n *\n * Outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate `TemplateRef`s.\n *\n * The outer/inner `TemplateRef`s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: function () {\n            return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @experimental\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @experimental\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver$1, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n    ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory() { return new ApplicationModule(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var res = {};\n    try {\n        for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var t = _b.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n    var e_1, _c;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n    var e_2, _a;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n *\n */\n\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(exports.SecurityContext || (exports.SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef$1);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance$1(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey$1:\n            case INJECTORRefTokenKey$1:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance$1(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            var injectableDef = depDef.token.ngInjectableDef;\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory$1));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef$1));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef$1(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef$1);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef$1));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var flags = 0;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver$1); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef$1);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\nvar TemplateRefTokenKey = tokenKey(TemplateRef$1);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n            view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery$1() {\n    return new QueryList$1();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery$1();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var el = this.delegate.selectRootElement(selectorOrNode);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (unsafeResourceUrl instanceof String &&\n        unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.defineInjector = defineInjector;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injectable = Injectable;\nexports.inject = inject;\nexports.INJECTOR = INJECTOR;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.createInjector = createInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory$1;\nexports.ComponentRef = ComponentRef$1;\nexports.ComponentFactoryResolver = ComponentFactoryResolver$1;\nexports.ElementRef = ElementRef$1;\nexports.NgModuleFactory = NgModuleFactory$1;\nexports.NgModuleRef = NgModuleRef$1;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList$1;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef$1;\nexports.ViewContainerRef = ViewContainerRef$1;\nexports.EmbeddedViewRef = EmbeddedViewRef$1;\nexports.ViewRef = ViewRef$1;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\nexports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\nexports.ÉµdevModeEqual = devModeEqual;\nexports.ÉµisListLikeIterable = isListLikeIterable;\nexports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ÉµConsole = Console;\nexports.Éµinject = inject;\nexports.ÉµsetCurrentInjector = setCurrentInjector;\nexports.ÉµAPP_ROOT = APP_ROOT;\nexports.ÉµivyEnabled = ivyEnabled;\nexports.ÉµComponentFactory = ComponentFactory$1;\nexports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ÉµresolveComponentResources = resolveComponentResources;\nexports.ÉµReflectionCapabilities = ReflectionCapabilities;\nexports.ÉµRenderDebugInfo = RenderDebugInfo;\nexports.Éµ_sanitizeHtml = _sanitizeHtml;\nexports.Éµ_sanitizeStyle = _sanitizeStyle;\nexports.Éµ_sanitizeUrl = _sanitizeUrl;\nexports.Éµglobal = _global;\nexports.ÉµlooseIdentical = looseIdentical;\nexports.Éµstringify = stringify;\nexports.ÉµmakeDecorator = makeDecorator;\nexports.ÉµisObservable = isObservable;\nexports.ÉµisPromise = isPromise;\nexports.ÉµclearOverrides = clearOverrides;\nexports.ÉµoverrideComponentView = overrideComponentView;\nexports.ÉµoverrideProvider = overrideProvider;\nexports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ÉµdefineComponent = defineComponent;\nexports.ÉµdefineDirective = defineDirective;\nexports.ÉµdefinePipe = definePipe;\nexports.ÉµdefineNgModule = defineNgModule;\nexports.ÉµdetectChanges = detectChanges;\nexports.ÉµrenderComponent = renderComponent;\nexports.ÉµdirectiveInject = directiveInject;\nexports.ÉµinjectTemplateRef = injectTemplateRef;\nexports.ÉµinjectViewContainerRef = injectViewContainerRef;\nexports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ÉµinjectAttribute = injectAttribute;\nexports.ÉµPublicFeature = PublicFeature;\nexports.ÉµNgOnChangesFeature = NgOnChangesFeature;\nexports.ÉµmarkDirty = markDirty;\nexports.ÉµNC = NO_CHANGE;\nexports.ÉµC = container;\nexports.ÉµE = elementStart;\nexports.ÉµNH = namespaceHTML;\nexports.ÉµNM = namespaceMathML;\nexports.ÉµNS = namespaceSVG;\nexports.ÉµEe = element;\nexports.ÉµL = listener;\nexports.ÉµT = text;\nexports.ÉµV = embeddedViewStart;\nexports.ÉµQ = query;\nexports.Éµd = loadDirective;\nexports.ÉµP = projection;\nexports.Éµb = bind;\nexports.Éµi1 = interpolation1;\nexports.Éµi2 = interpolation2;\nexports.Éµi3 = interpolation3;\nexports.Éµi4 = interpolation4;\nexports.Éµi5 = interpolation5;\nexports.Éµi6 = interpolation6;\nexports.Éµi7 = interpolation7;\nexports.Éµi8 = interpolation8;\nexports.ÉµiV = interpolationV;\nexports.Éµpb1 = pipeBind1;\nexports.Éµpb2 = pipeBind2;\nexports.Éµpb3 = pipeBind3;\nexports.Éµpb4 = pipeBind4;\nexports.ÉµpbV = pipeBindV;\nexports.Éµf0 = pureFunction0;\nexports.Éµf1 = pureFunction1;\nexports.Éµf2 = pureFunction2;\nexports.Éµf3 = pureFunction3;\nexports.Éµf4 = pureFunction4;\nexports.Éµf5 = pureFunction5;\nexports.Éµf6 = pureFunction6;\nexports.Éµf7 = pureFunction7;\nexports.Éµf8 = pureFunction8;\nexports.ÉµfV = pureFunctionV;\nexports.ÉµcR = containerRefreshStart;\nexports.Éµcr = containerRefreshEnd;\nexports.ÉµqR = queryRefresh;\nexports.Éµe = elementEnd;\nexports.Éµp = elementProperty;\nexports.ÉµpD = projectionDef;\nexports.ÉµrS = reserveSlots;\nexports.Éµa = elementAttribute;\nexports.Éµs = elementStyle;\nexports.Éµsn = elementStyleNamed;\nexports.Éµk = elementClass;\nexports.Éµkn = elementClassNamed;\nexports.Éµt = textBinding;\nexports.Éµv = embeddedViewEnd;\nexports.Éµst = store;\nexports.Éµld = load;\nexports.ÉµPp = pipe;\nexports.ÉµwhenRendered = whenRendered;\nexports.ÉµiA = i18nApply;\nexports.ÉµiEM = i18nExpMapping;\nexports.ÉµiI = i18nInterpolation;\nexports.ÉµIV = i18nInterpolationV;\nexports.ÉµiM = i18nMapping;\nexports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ÉµsanitizeHtml = sanitizeHtml;\nexports.ÉµsanitizeStyle = sanitizeStyle;\nexports.ÉµsanitizeUrl = sanitizeUrl;\nexports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ÉµregisterModuleFactory = registerModuleFactory;\nexports.ÉµEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ÉµEMPTY_MAP = EMPTY_MAP;\nexports.Éµand = anchorDef;\nexports.Éµccf = createComponentFactory;\nexports.Éµcmf = createNgModuleFactory;\nexports.Éµcrt = createRendererType2;\nexports.Éµdid = directiveDef;\nexports.Éµeld = elementDef;\nexports.ÉµelementEventFullName = elementEventFullName;\nexports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ÉµinlineInterpolate = inlineInterpolate;\nexports.Éµinterpolate = interpolate;\nexports.Éµmod = moduleDef;\nexports.Éµmpd = moduleProvideDef;\nexports.Éµncd = ngContentDef;\nexports.Éµnov = nodeValue;\nexports.Éµpid = pipeDef;\nexports.Éµprd = providerDef;\nexports.Éµpad = pureArrayDef;\nexports.Éµpod = pureObjectDef;\nexports.Éµppd = purePipeDef;\nexports.Éµqud = queryDef;\nexports.Éµted = textDef;\nexports.Éµunv = unwrapValue;\nexports.Éµvid = viewDef;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}