{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","Directive","dir","type","Component","c","changeDetection","Default","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME$1","USE_VALUE$1","getClosureSafeProperty$1","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Injectable","preR3InjectableCompile","injectableType","NgModule","ngModule","preR3NgModuleCompile","moduleType","metadata","ngInjectorDef","Version","VERSION","full","major","split","minor","patch","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","add","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","subscribe","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","Subscription","Subject","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","listener","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","unsubscribe","merge","pipe","share","componentOrFactory","componentFactory","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","list","el","splice","RendererStyleFlags2","RenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","QueryList","dirty","_results","changes","find","toArray","reset","flatten","flat","item","flatItem","last","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ChangeDetectorRef","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","node","triggerEventHandler","eventObj","element","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_c","e_1_1","return","merge$1","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","None","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","INJECTORRefTokenKey","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","subscription","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","prefix","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","queueContentHooks","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","directives","initHooks","checkHooks","allHooks","hooksToCall","callHooks","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","document","stringify$1","findNextRNodeSibling","stopNode","currentNode","pNextOrParent","tNode","findFirstRNode","currentSibling","getNextLNode","getParentLNode","parentType","lView","getChildLNode","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","walkLNodeTree","startingNode","renderParentNode","beforeNode","native","parent_2","childContainerData","dynamicLContainerNode","views","head","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","queries","containerNextNativeNode","removeIndex","removedLview","removeView","destroyLView","getLViewChild","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","removeListeners","cleanup","removeEventListener","cleanupInstances","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeNode","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","selectorAttrValue","nodeAttrValue","step","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","throwMultipleComponentError","previousOrParentNode","isParent","tData","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","CIRCULAR$2","getCurrentSanitizer","getPreviousOrParentNode","currentQueries","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","leaveView","creationOnly","refreshView","refreshDynamicChildren","nextIndex","container_1","lViewNode","dynamicView","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","componentRefresh","defs","dirIndex","executeInitAndContentHooks","createLView","tail","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","previousTNode","dynamicContainerNode","_isParent","_previousOrParentNode","rf","renderComponentOrTemplate","componentOrContext","getRenderFlags","createDirectivesAndLocals","localRefs","cacheMatchingDirectivesForNode","exportsMap","","currentMatches","findDirectiveMatches","directiveRegistry","diPublic","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","throwCyclicDependencyError","initChangeDetectorIfExisting","_setComponentContext","exportAs","getOrCreateTView","pipes","ngPrivateData","createTView","bindingStartIndex","pipeRegistry","setUpAttributes","isProc","attrVal","locateHostElement","elementOrSelector","defaultRenderer","tag","rNode","resetApplicationState","directiveDefs","pipeDefs","onPush","storeCleanupWithContext","storeCleanupFn","tViews","initialInputs","generatePropertyAliases","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","baseDirectiveCreate","addComponentLogic","addToViewTree","queueComponentIndexForCheck","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","createLContainer","parentLNode","isForViewContainerRef","elementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","findComponentHost","viewRootLNode","hostIndex","markViewDirty","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","NO_CHANGE","initBindings","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","store","consumeBinding","bindingUpdated","isDifferent","throwErrorIfNoChangesMode","checkAndUpdateBinding$1","bindingUpdated2","exp1","exp2","different","bindingUpdated4","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","ViewRef$1","EmbeddedViewRef$1","_lViewNode","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","startInjector","ReadFromInjectorFn","read","ElementRef$1","getOrCreateContainerRef","vcRefHost","hostParent","lContainerNode","hostTNode","ViewContainerRef$1","_lContainerNode","_viewRefs","notImplemented","adjustedIdx","_adjustIndex","newIndex","shift","getOrCreateTemplateRef","hostTView","TemplateRef$1","getOrCreateElementRef","getRenderer","_tView","_renderer","_queries","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","PRIVATE_PREFIX","EMPTY$1","newObj","minifiedKey","defineDirective","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","ngModuleDef","componentFactoryResolver","pureFunction1","slotOffset","pureFn","exp","thisArg","pureFunction2","pureFunction3","pureFunction4","pureFunctionV","exps","isPure","NgModuleFactory$$1","LQueries_","deep","shallow","track","descend","createQuery$1","containerValues","clonedQuery","addNode","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten$1","BRAND","bypassSanitizationTrustString","trustedString","trusted","Éµangular_packages_core_core_m","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_l","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_i","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_n","Éµangular_packages_core_core_p","Éµangular_packages_core_core_o","Éµangular_packages_core_core_s","Éµangular_packages_core_core_q","Éµangular_packages_core_core_r","Éµangular_packages_core_core_w","Éµangular_packages_core_core_y","Éµangular_packages_core_core_x","Éµangular_packages_core_core_v","Éµangular_packages_core_core_z","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefineComponent","ÉµdefineDirective","ÉµdefinePipe","definePipe","pipeDef","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµdirectiveInject","directiveInject","ÉµinjectTemplateRef","injectTemplateRef","ÉµinjectViewContainerRef","injectViewContainerRef","ÉµinjectChangeDetectorRef","injectChangeDetectorRef","ÉµinjectAttribute","injectAttribute","attrNameToInject","ÉµPublicFeature","PublicFeature","definition","ÉµNgOnChangesFeature","NgOnChangesFeature","inputPropertyNames","proto","_loop_1","pubKey","minKey","privateMinKey","originalProperty","getOwnPropertyDescriptor","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ÉµmarkDirty","markDirty","ÉµNC","ÉµC","ÉµE","elementStart","ÉµL","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","addEventListener","outputData","createOutput","ÉµT","textNode","createTextNode","ÉµV","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","ÉµQ","memoryIndex","getCurrentQueries","QueryType","Éµd","loadDirective","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","nodeToProject","previouslyProjected","lastNodeToProject","Éµb","Éµi1","interpolation1","Éµi2","interpolation2","i0","Éµi3","interpolation3","i1","Éµi4","interpolation4","i2","Éµi5","interpolation5","i3","Éµi6","interpolation6","i4","Éµi7","interpolation7","i5","Éµi8","interpolation8","i6","ÉµiV","interpolationV","Éµpb1","pipeBind1","pipeInstance","Éµpb2","pipeBind2","Éµpb3","pipeBind3","Éµpb4","pipeBind4","ÉµpbV","pipeBindV","Éµf0","pureFunction0","getCreationMode","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","pureFunction5","exp5","Éµf6","pureFunction6","exp6","Éµf7","pureFunction7","exp7","Éµf8","pureFunction8","exp8","ÉµfV","ÉµcR","containerRefreshStart","Éµcr","containerRefreshEnd","ÉµqR","queryRefresh","Éµe","elementEnd","queueLifecycleHooks","Éµp","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","ÉµrS","reserveSlots","numSlots","Éµa","elementAttribute","strValue","Éµs","elementStyle","lElement","removeProperty","Éµsn","elementStyleNamed","suffixOrSanitizer","DashCase","Éµk","elementClass","Éµkn","elementClassNamed","classList","Éµt","textBinding","existingNode","textContent","Éµv","embeddedViewEnd","setRenderParentInProjectedNodes","Éµst","Éµld","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.0-rc.5+323.sha-22b58a7\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * ### Example\n *\n * #### Tree-shakeable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n * #### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n *\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        var TypeDecorator = function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        };\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n * more information.\n *\n *\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n *  @Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n *\n */\n\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * Describes the status of the detector.\n */\n\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ivyEnabled = false;\nvar R3_COMPILE_COMPONENT = null;\nvar R3_COMPILE_DIRECTIVE = null;\nvar R3_COMPILE_INJECTABLE = null;\nvar R3_COMPILE_NGMODULE = null;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n/**\n * Component decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n/**\n * Pipe decorator and metadata.\n *\n * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe\n * class must also implement {@link PipeTransform} interface.\n *\n * To use the pipe include a reference to the pipe class in\n * {@link NgModule#declarations}.\n *\n *\n * @Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Input decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Output decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * HostBinding decorator and metadata.\n *\n *\n * @Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * HostListener decorator and metadata.\n *\n *\n * @Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {@link forwardRef}\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n *\n * @Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nvar INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * @usageNotes\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * @description\n *\n * Concrete injectors implement this interface.\n *\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME$1 = {};\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nfunction getClosureSafeProperty$1(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME$1) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        var injectableDef = token.ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = 0;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME = {};\nvar Éµ0 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: Éµ0 }, GET_PROPERTY_NAME);\nvar EMPTY_ARRAY = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/**\n* Injectable decorator and metadata.\n*\n*\n* @Annotation\n*/\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n    return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n *\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * @experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/**\n * NgModule decorator and metadata.\n *\n *\n * @Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n */\n\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n *\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\nvar VERSION = new Version('6.0.0-rc.5+323.sha-22b58a7');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n *\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {@link\n * Provider}.\n * @experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {@link Provider} into {@link ResolvedProvider}.\n *\n * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n * convenience provider syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$1 = {};\nvar EMPTY_ARRAY$1 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$1 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$1 === undefined) {\n        NULL_INJECTOR$1 = new NullInjector();\n    }\n    return NULL_INJECTOR$1;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @experimental\n */\nfunction createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        additionalProviders &&\n            deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) &&\n                        token.ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = defOrWrappedDef.ngInjectorDef;\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, throw.\n        if (def == null) {\n            throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$1) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$1;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefRecord(token) {\n    var def = token.ngInjectableDef;\n    if (def === undefined) {\n        throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    return makeRecord(def.factory);\n}\nfunction providerToRecord(provider) {\n    var token = resolveForwardRef(provider);\n    var value = NOT_YET;\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = provider.useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return USE_VALUE$1 in value;\n}\nfunction isExistingProvider(value) {\n    return !!value.useExisting;\n}\nfunction isFactoryProvider(value) {\n    return !!value.useFactory;\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable }\n    ];\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    Compiler.decorators = [\n        { type: Injectable }\n    ];\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @experimental\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs.Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: t.data.target\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone }\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n *\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var compilerFactory = this.injector.get(CompilerFactory);\n        var options = optionsReducer({}, compilerOptions);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector }\n    ]; };\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n *\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new rxjs.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new rxjs.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Console },\n        { type: Injector },\n        { type: ErrorHandler },\n        { type: ComponentFactoryResolver },\n        { type: ApplicationInitStatus }\n    ]; };\n    return ApplicationRef;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * @experimental\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * @experimental\n */\n\n(function (RendererStyleFlags2) {\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n/**\n * @experimental\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nfunction getModuleFactory(id) {\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n *\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n *\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {@link TemplateRef}s:\n *\n * Outer {@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n *\n * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: function () {\n            return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @experimental\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @experimental\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.\n *\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef }\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var res = {};\n    try {\n        for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var t = _b.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n    var e_1, _c;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n    var e_2, _a;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n *\n */\n\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(exports.SecurityContext || (exports.SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        var _a;\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    exports.ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$2 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance$1(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey$1:\n            case INJECTORRefTokenKey$1:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance$1(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            var injectableDef = depDef.token.ngInjectableDef;\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var flags = 0;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n            view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery() {\n    return new QueryList();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var el = this.delegate.selectRootElement(selectorOrNode);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\nfunction assertSame(actual, expected, msg) {\n    if (actual !== expected) {\n        throwError(msg);\n    }\n}\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LView.data\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(flags, currentView) {\n    var tView = currentView.tView;\n    if (tView.firstTemplatePass === true) {\n        var start = flags >> 13;\n        var count = flags & 4095;\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            var def = tView.directives[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView.flags & 16 /* RunInit */) {\n        executeHooks(currentView.directives, tView.initHooks, tView.checkHooks, creationMode);\n        currentView.flags &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(data[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n    function ngDevModeResetPerfCounters() {\n        global['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n        };\n    }\n    ngDevModeResetPerfCounters();\n    return ngDevModeResetPerfCounters;\n})(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n    typeof global != 'undefined' && global));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(node, 'should be called with a node');\n    var found = types.some(function (type) { return node.tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten$1(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the first RNode following the given LNode in the same parent DOM element.\n *\n * This is needed in order to insert the given node with insertBefore.\n *\n * @param node The node whose following DOM node must be found.\n * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n * lookup should not be stopped until the result is found.\n * @returns RNode before which the provided node should be inserted or null if the lookup was\n * stopped\n * or if there is no native node after the given logical node in the same native parent.\n */\nfunction findNextRNodeSibling(node, stopNode) {\n    var currentNode = node;\n    while (currentNode && currentNode !== stopNode) {\n        var pNextOrParent = currentNode.pNextOrParent;\n        if (pNextOrParent) {\n            while (pNextOrParent.tNode.type !== 1 /* Projection */) {\n                var nativeNode = findFirstRNode(pNextOrParent);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                pNextOrParent = pNextOrParent.pNextOrParent;\n            }\n            currentNode = pNextOrParent;\n        }\n        else {\n            var currentSibling = getNextLNode(currentNode);\n            while (currentSibling) {\n                var nativeNode = findFirstRNode(currentSibling);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                currentSibling = getNextLNode(currentSibling);\n            }\n            var parentNode = getParentLNode(currentNode);\n            currentNode = null;\n            if (parentNode) {\n                var parentType = parentNode.tNode.type;\n                if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                    currentNode = parentNode;\n                }\n            }\n        }\n    }\n    return null;\n}\n/** Retrieves the sibling node for the given node. */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        var lView = node.data;\n        return lView.next ? lView.next.node : null;\n    }\n    return node.tNode.next ? node.view.data[node.tNode.next.index] : null;\n}\n/** Retrieves the first child of a given node */\nfunction getChildLNode(node) {\n    if (node.tNode.child) {\n        var view = node.tNode.type === 2 /* View */ ? node.data : node.view;\n        return view.data[node.tNode.child.index];\n    }\n    return null;\n}\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1)\n        return null;\n    var parent = node.tNode.parent;\n    return parent ? node.view.data[parent.index] : node.view.node;\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var isLastProjectedNode = pNextOrParent.tNode.type === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return getNextLNode(node);\n}\n/**\n * Find the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * If there is no sibling node, this function goes to the next sibling of the parent node...\n * until it reaches rootNode (at which point null is returned).\n *\n * @param initialNode The node whose following node in the LNode tree must be found.\n * @param rootNode The root node at which the lookup should stop.\n * @return LNode|null The following node in the LNode tree.\n */\nfunction getNextOrParentSiblingNode(initialNode, rootNode) {\n    var node = initialNode;\n    var nextNode = getNextLNodeWithProjection(node);\n    while (node && !nextNode) {\n        // if node.pNextOrParent is not null here, it is not the next node\n        // (because, at this point, nextNode is null, so it is the parent)\n        node = node.pNextOrParent || getParentLNode(node);\n        if (node === rootNode) {\n            return null;\n        }\n        nextNode = node && getNextLNodeWithProjection(node);\n    }\n    return nextNode;\n}\n/**\n * Returns the first RNode inside the given LNode.\n *\n * @param node The node whose first DOM node must be found\n * @returns RNode The first RNode of the given LNode or null if there is none.\n */\nfunction findFirstRNode(rootNode) {\n    return walkLNodeTree(rootNode, rootNode, 0 /* Find */) || null;\n}\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n *\n * @param startingNode the node from which the walk is started.\n * @param rootNode the root node considered.\n * @param action Identifies the action to be performed on the LElement nodes.\n * @param renderer Optional the current renderer, required for action modes 1, 2 and 3.\n * @param renderParentNode Optionnal the render parent node to be set in all LContainerNodes found,\n * required for action modes 1 and 2.\n * @param beforeNode Optionnal the node before which elements should be added, required for action\n * modes 1.\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    var node = startingNode;\n    while (node) {\n        var nextNode = null;\n        if (node.tNode.type === 3 /* Element */) {\n            // Execute the action\n            if (action === 0 /* Find */) {\n                return node.native;\n            }\n            else if (action === 1 /* Insert */) {\n                var parent_1 = renderParentNode.native;\n                isProceduralRenderer(renderer) ?\n                    renderer\n                        .insertBefore(parent_1, node.native, beforeNode) :\n                    parent_1.insertBefore(node.native, beforeNode, true);\n            }\n            else if (action === 2 /* Detach */) {\n                var parent_2 = renderParentNode.native;\n                isProceduralRenderer(renderer) ?\n                    renderer.removeChild(parent_2, node.native) :\n                    parent_2.removeChild(node.native);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(node.native);\n            }\n            nextNode = getNextLNode(node);\n        }\n        else if (node.tNode.type === 0 /* Container */) {\n            var lContainerNode = node;\n            var childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData.renderParent = renderParentNode;\n            }\n            nextNode =\n                childContainerData.views.length ? getChildLNode(childContainerData.views[0]) : null;\n        }\n        else if (node.tNode.type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = node.data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(node);\n        }\n        node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var parentNode = container.data.renderParent;\n    var parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        var node = getChildLNode(rootNode);\n        var renderer = container.view.renderer;\n        walkLNodeTree(node, rootNode, insertMode ? 1 /* Insert */ : 2 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView.tView.childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.views && viewOrContainer.views.length) {\n            next = viewOrContainer.views[0].data;\n        }\n        else if (viewOrContainer.tView && viewOrContainer.tView.childIndex > -1) {\n            next = getLViewChild(viewOrContainer);\n        }\n        else if (viewOrContainer.next) {\n            // Only move to the side and clean if operating below rootView -\n            // otherwise we would start cleaning up sibling views of the rootView.\n            cleanUpView(viewOrContainer);\n            next = viewOrContainer.next;\n        }\n        if (next == null) {\n            // If the viewOrContainer is the rootView and next is null it means that we are dealing\n            // with a root view that doesn't have children. We didn't descend into child views\n            // so no need to go back up the views tree.\n            while (viewOrContainer && !viewOrContainer.next && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer.next;\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param viewNode The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    var state = container.data;\n    var views = state.views;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data.next = viewNode.data;\n    }\n    if (index < views.length) {\n        viewNode.data.next = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        viewNode.data.next = null;\n    }\n    // Notify query that a new view has been added\n    var lView = viewNode.data;\n    if (lView.queries) {\n        lView.queries.insertView(index);\n    }\n    // If the container's renderParent is null, we know that it is a root node of its own parent view\n    // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n    // nodes twice - once now and once when its parent inserts its views).\n    if (container.data.renderParent !== null) {\n        var beforeNode = findNextRNodeSibling(viewNode, container);\n        if (!beforeNode) {\n            var containerNextNativeNode = container.native;\n            if (containerNextNativeNode === undefined) {\n                containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n            }\n            beforeNode = containerNextNativeNode;\n        }\n        addRemoveViewFromContainer(container, viewNode, true, beforeNode);\n    }\n    // Sets the attached flag\n    viewNode.data.flags |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param container The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns The detached view\n */\nfunction detachView(container, removeIndex) {\n    var views = container.data.views;\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data.next = viewNode.data.next;\n    }\n    views.splice(removeIndex, 1);\n    addRemoveViewFromContainer(container, viewNode, false);\n    // Notify query that view has been removed\n    var removedLview = viewNode.data;\n    if (removedLview.queries) {\n        removedLview.queries.removeView(removeIndex);\n    }\n    // Unsets the attached flag\n    viewNode.data.flags &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nfunction removeView(container, removeIndex) {\n    var viewNode = container.data.views[removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/** Gets the child of the given LView */\nfunction getLViewChild(view) {\n    if (view.tView.childIndex === -1)\n        return null;\n    var hostNode = view.data[view.tView.childIndex];\n    return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nfunction destroyLView(view) {\n    var renderer = view.renderer;\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view.node, view.node, 3 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view.flags |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var node;\n    if ((node = state.node) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getParentLNode(node).data;\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state.parent === rootView ? null : state.parent;\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(viewOrContainer) {\n    if (viewOrContainer.tView) {\n        var view = viewOrContainer;\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view.tView.id === -1 && isProceduralRenderer(view.renderer)) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view.renderer.destroy();\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(view) {\n    var cleanup = view.tView.cleanup;\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                // This is a listener with the native renderer\n                var native = view.data[cleanup[i + 1]].native;\n                var listener = view.cleanupInstances[cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                // This is a listener with renderer2 (cleanup fn can be found by index)\n                var cleanupFn = view.cleanupInstances[cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = view.cleanupInstances[cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        view.cleanupInstances = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view.tView;\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view.directives, destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(view) {\n    var pipeDestroyHooks = view.tView && view.tView.pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(view.data, pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element should be inserted in the given parent.\n *\n * The native node can be inserted when its parent is:\n * - A regular element => Yes\n * - A component host element =>\n *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n *      template)\n *      => don't add as the parent component will project if needed.\n *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n *      add it\n * - View element => delay insertion, will be done on `viewEnd()`\n *\n * @param parent The parent in which to insert the child\n * @param currentView The LView being processed\n * @return boolean Whether the child element should be inserted.\n */\nfunction canInsertNativeNode(parent, currentView) {\n    var parentIsElement = parent.tNode.type === 3;\n    return parentIsElement &&\n        (parent.view !== currentView || parent.data === null /* Regular Element. */);\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only add element if not in View or not projected.\n        var renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n            parent.native.appendChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nfunction appendProjectedNode(node, currentParent, currentView) {\n    if (node.tNode.type !== 0 /* Container */) {\n        appendChild(currentParent, node.native, currentView);\n    }\n    else {\n        // The node we are adding is a Container and we are adding it to Element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assignee the final projection location in those cases.\n        var lContainer = node.data;\n        lContainer.renderParent = currentParent;\n        var views = lContainer.views;\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(node, views[i], true, null);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data.renderParent = currentParent;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SELECT_ONLY */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx ?\n                    '' :\n                    nodeAttrs[attrIndexInNode + 1];\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\nfunction findAttrIndexInNode(name, attrs) {\n    var step = 2;\n    if (attrs === null)\n        return -1;\n    for (var i = 0; i < attrs.length; i += step) {\n        var attrName = attrs[i];\n        if (attrName === name)\n            return i;\n        if (attrName === 1 /* SELECT_ONLY */) {\n            step = 1;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n */\nvar _ROOT_DIRECTIVE_INDICES = [0, 0];\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nvar CIRCULAR$2 = '__CIRCULAR__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\nfunction getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\nfunction getCurrentSanitizer() {\n    return currentView && currentView.sanitizer;\n}\n/** Used to set the parent property when nodes are created. */\nvar previousOrParentNode;\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array. Any nodes that do not have static data store a null value in\n * tData to avoid a sparse array.\n */\nvar tData;\n/**\n * State of the current view being processed.\n *\n * NOTE: we cheat here and initialize it to `null` even thought the type does not\n * contain `null`. This is because we expect this value to be not `null` as soon\n * as we enter the view. Declaring the type as `null` would require us to place `!`\n * in most instructions since they all assume that `currentView` is defined.\n */\nvar currentView = null;\nvar currentQueries;\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueries || (currentQueries = new QueryType());\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar data;\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nvar directives;\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view.cleanupInstances || (view.cleanupInstances = []);\n}\nfunction getTViewCleanup(view) {\n    return view.tView.cleanup || (view.tView.cleanup = []);\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, host) {\n    var oldView = currentView;\n    data = newView && newView.data;\n    directives = newView && newView.directives;\n    tData = newView && newView.tView.data;\n    creationMode = newView && (newView.flags & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && newView.tView.firstTemplatePass;\n    renderer = newView && newView.renderer;\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    currentView = newView;\n    currentQueries = newView && newView.queries;\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(directives, currentView.tView.viewHooks, currentView.tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        currentView.flags &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    currentView.flags |= 16 /* RunInit */;\n    currentView.bindingIndex = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic children, triggers content hooks, sets host bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n * */\nfunction refreshView() {\n    var tView = currentView.tView;\n    if (!checkNoChangesMode) {\n        executeInitHooks(currentView, tView, creationMode);\n    }\n    refreshDynamicChildren();\n    if (!checkNoChangesMode) {\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        var defs = currentView.tView.directives;\n        for (var i = 0; i < bindings.length; i += 2) {\n            var dirIndex = bindings[i];\n            var def = defs[dirIndex];\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        var tView = currentView.tView;\n        executeInitHooks(currentView, tView, creationMode);\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\nfunction createLView(renderer, tView, context, flags, sanitizer) {\n    var newView = {\n        parent: currentView,\n        flags: flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        node: null,\n        data: [],\n        directives: null,\n        tView: tView,\n        cleanupInstances: null,\n        renderer: renderer,\n        tail: null,\n        next: null,\n        bindingIndex: -1,\n        context: context,\n        queries: null,\n        injector: currentView && currentView.injector,\n        sanitizer: sanitizer || null\n    };\n    return newView;\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: native,\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null,\n        dynamicLContainerNode: null\n    };\n}\nfunction createLNode(index, type, native, name, attrs, state) {\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && getParentLNode(previousOrParentNode);\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var tParent = parent && parent.view === currentView ? parent.tNode : null;\n    var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var isState = state != null;\n    var node = createLNodeObject(type, currentView, parent, native, isState ? state : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = state.tView.node || createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(index);\n        data[index] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (index >= tData.length) {\n            var tNode = tData[index] = createTNode(type, index, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                var previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = tData[index];\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === currentView ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        // Bit of a hack to bust through the readonly because there is a circular dep between\n        // LView and LNode.\n        ngDevMode &&\n            assertNotDefined(state.node, 'LView.node should not have been initialized');\n        state.node = node;\n        if (firstTemplatePass)\n            state.tView.node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = null;\n}\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\n\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewNode, tView, context, renderer, queries) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    var oldView;\n    var rf = 2;\n    try {\n        isParent = true;\n        previousOrParentNode = null;\n        if (viewNode == null) {\n            var lView = createLView(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (queries) {\n                lView.queries = queries.createView();\n            }\n            viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n            rf = 1 /* Create */;\n        }\n        oldView = enterView(viewNode.data, viewNode);\n        tView.template(rf, context);\n        if (rf & 2 /* Update */) {\n            refreshView();\n        }\n        else {\n            viewNode.data.tView.firstTemplatePass = firstTemplatePass = false;\n        }\n    }\n    finally {\n        // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n        // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n        var isCreationOnly = (rf & 1 /* Create */) === 1;\n        leaveView(oldView, isCreationOnly);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            template(getRenderFlags(hostView), componentOrContext);\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, 0);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view) {\n    return view.flags & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native = renderer.createElement(name);\n    ngDevMode && assertDataInRange(index - 1);\n    var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n    if (attrs)\n        setUpAttributes(native, attrs);\n    appendChild(getParentLNode(node), native, currentView);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the current node\n */\nfunction createDirectivesAndLocals(localRefs) {\n    var node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, currentView.tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    var exportsMap = localRefs ? { '': -1 } : null;\n    var matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            var valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(matches[valueIndex], def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode) {\n    var registry = currentView.tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                if (def.template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return matches;\n}\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$2;\n        var instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$2) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (currentView.tView.components || (currentView.tView.components = [])).push(dirIndex, data.length - 1);\n    }\n}\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (currentView.tView.hostBindings || (currentView.tView.hostBindings = [])).push(dirIndex, data.length - 1);\n}\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        injector.changeDetectorRef._setComponentContext(view, instance);\n    }\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n    var tNode = previousOrParentNode.tNode;\n    var count = tNode.flags & 4095;\n    if (count > 0) {\n        var start = tNode.flags >> 13;\n        var end = start + count;\n        var tDirectives = currentView.tView.directives;\n        for (var i = start; i < end; i++) {\n            var def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to data[] in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData() {\n    var localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ? previousOrParentNode.native : directives[index];\n            data.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(template, directives, pipes) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = createTView(-1, template, directives, pipes));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, template, directives, pipes) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        template: template,\n        node: null,\n        data: [],\n        childIndex: -1,\n        bindingStartIndex: -1,\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\nfunction setUpAttributes(native, attrs) {\n    var isProc = isProceduralRenderer(renderer);\n    for (var i = 0; i < attrs.length; i += 2) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SELECT_ONLY */)\n            break;\n        if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n            var attrVal = attrs[i + 1];\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProc ?\n                renderer\n                    .setAttribute(native, attrName, attrVal) :\n                native.setAttribute(attrName, attrVal);\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    var node = createLNode(0, 3 /* Element */, rNode, null, null, createLView(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        currentView.tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var node = previousOrParentNode;\n    var native = node.native;\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        var wrappedListener = wrapListenerWithDirtyLogic(currentView, listenerFn);\n        var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        storeCleanupFn(currentView, cleanupFn);\n    }\n    else {\n        var wrappedListener = wrapListenerWithDirtyAndDefault(currentView, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        var cleanupInstances = getCleanup(currentView);\n        cleanupInstances.push(wrappedListener);\n        if (firstTemplatePass) {\n            getTViewCleanup(currentView)\n                .push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n        }\n    }\n    var tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(outputs[i], directives);\n        var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(currentView, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(view, context, cleanupFn) {\n    if (view === void 0) { view = currentView; }\n    getCleanup(view).push(context);\n    if (view.tView.firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, view.cleanupInstances.length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view.tView.firstTemplatePass) {\n        getTViewCleanup(view).push(view.cleanupInstances.length - 1, null);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, currentView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var element = data[index];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                element.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                element.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var node = data[index];\n    var tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    var inputData = tNode && tNode.inputs;\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                native[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param index The index of the TNode in TView.data\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param parent The parent of this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(type, index, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: index,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(inputs[i], directives);\n        directives[inputs[i]][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    var count = tNodeFlags & 4095;\n    var propStore = null;\n    if (count > 0) {\n        var start = tNodeFlags >> 13;\n        var end = start + count;\n        var isInput = direction === 0;\n        var defs = currentView.tView.directives;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nfunction elementClassNamed(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var lElement = data[index];\n        if (value) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nfunction elementClass(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `className`. In the\n        // future\n        // we will add logic here which would work with the animation code.\n        var lElement = data[index];\n        ngDevMode && ngDevMode.rendererSetClassName++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n            lElement.native['className'] = stringify$1(value);\n    }\n}\nfunction elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var lElement = data[index];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].removeProperty(styleName);\n        }\n        else {\n            var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nfunction elementStyle(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n        // we will add logic here which would work with the animation code.\n        var lElement = data[index];\n        if (isProceduralRenderer(renderer)) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer.setProperty(lElement.native, 'style', value);\n        }\n        else {\n            var style = lElement.native['style'];\n            for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                var styleName = keys[i];\n                var styleValue = value[styleName];\n                if (styleValue == null) {\n                    ngDevMode && ngDevMode.rendererRemoveStyle++;\n                    style.removeProperty(styleName);\n                }\n                else {\n                    ngDevMode && ngDevMode.rendererSetStyle++;\n                    style.setProperty(styleName, styleValue);\n                }\n            }\n        }\n    }\n}\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array.\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNode = createTextNode(value, renderer);\n    var node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, currentView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index);\n        var existingNode = data[index];\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nfunction directiveCreate(index, directive, directiveDef) {\n    var instance = baseDirectiveCreate(index, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    var tNode = previousOrParentNode.tNode;\n    var isComponent = directiveDef.template;\n    if (isComponent) {\n        addComponentLogic(index, directive, directiveDef);\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, currentView.tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(index);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n    }\n    return instance;\n}\nfunction addComponentLogic(index, instance, def) {\n    var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var hostView = addToViewTree(currentView, previousOrParentNode.tNode.index, createLView(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    previousOrParentNode.data = hostView;\n    hostView.node = previousOrParentNode;\n    if (firstTemplatePass)\n        tView.node = previousOrParentNode.tNode;\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, hostView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(index);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        currentView.directives = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        var flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        var diPublic = directiveDef.diPublic;\n        if (diPublic)\n            diPublic(directiveDef);\n    }\n    if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    for (var i = 0; i < attrs.length; i += 2) {\n        var attrName = attrs[i];\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (attrName === 1 /* SELECT_ONLY */)\n            break;\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param parentLNode the LNode in which the container's content will be rendered\n * @param currentView The parent view of the LContainer\n * @param template Optional the inline template (ng-template instruction case)\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(parentLNode, currentView, template, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    return {\n        views: [],\n        nextIndex: isForViewContainerRef ? null : 0,\n        // If the direct parent of the container is a view, its views will need to be added\n        // through insertView() when its parent view is being inserted:\n        renderParent: canInsertNativeNode(parentLNode, currentView) ? parentLNode : null,\n        template: template == null ? null : template,\n        next: null,\n        parent: currentView,\n        queries: null\n    };\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'container nodes should be created before any bindings');\n    var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n    var lContainer = createLContainer(currentParent, currentView, template);\n    var node = createLNode(index, 0 /* Container */, undefined, tagName || null, attrs || null, lContainer);\n    if (firstTemplatePass && template == null)\n        node.tNode.tViews = [];\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(currentView, index, node.data);\n    var queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer.queries = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    ngDevMode && assertDataInRange(index);\n    previousOrParentNode = data[index];\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    previousOrParentNode.data.nextIndex = 0;\n    ngDevMode && assertSame(previousOrParentNode.native, undefined, \"the container's native element should not have been set yet.\");\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(currentView, currentView.tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var container = previousOrParentNode;\n    container.native = undefined;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var nextIndex = container.data.nextIndex;\n    // remove extra views at the end of the container\n    while (nextIndex < container.data.views.length) {\n        removeView(container, nextIndex);\n    }\n}\nfunction refreshDynamicChildren() {\n    for (var current = getLViewChild(currentView); current !== null; current = current.next) {\n        // Note: current can be a LView or a LContainer, but here we are only interested in LContainer.\n        // The distinction is made because nextIndex and views do not exist on LView.\n        if (isLContainer(current)) {\n            var container_1 = current;\n            for (var i = 0; i < container_1.views.length; i++) {\n                var lViewNode = container_1.views[i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                var dynamicView = lViewNode.data;\n                ngDevMode && assertDefined(dynamicView.tView, 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicView.tView, dynamicView.context, renderer);\n            }\n        }\n    }\n}\nfunction isLContainer(node) {\n    return node.nextIndex == null && node.views != null;\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    var views = containerNode.data.views;\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i].data.tView.id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var lContainer = container.data;\n    var viewNode = scanForView(container, lContainer.nextIndex, viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var newView = createLView(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer.queries) {\n            newView.queries = lContainer.queries.createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tNode.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        var tView = currentView.tView;\n        containerTViews[viewIndex] =\n            createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    var viewNode = previousOrParentNode = currentView.node;\n    var containerNode = getParentLNode(previousOrParentNode);\n    if (containerNode) {\n        ngDevMode && assertNodeType(viewNode, 2 /* View */);\n        ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n        var lContainer = containerNode.data;\n        if (creationMode) {\n            // When projected nodes are going to be inserted, the renderParent of the dynamic container\n            // used by the ViewContainerRef must be set.\n            setRenderParentInProjectedNodes(lContainer.renderParent, viewNode);\n            // it is a new view, insert it into collection of views for a given container\n            insertView(containerNode, viewNode, lContainer.nextIndex);\n        }\n        lContainer.nextIndex++;\n    }\n    leaveView(currentView.parent);\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * For nodes which are projected inside an embedded view, this function sets the renderParent\n * of their dynamic LContainerNode.\n * @param renderParent the renderParent of the LContainer which contains the embedded view.\n * @param viewNode the embedded view.\n */\nfunction setRenderParentInProjectedNodes(renderParent, viewNode) {\n    if (renderParent != null) {\n        var node = getChildLNode(viewNode);\n        while (node) {\n            if (node.tNode.type === 1 /* Projection */) {\n                var nodeToProject = node.data.head;\n                var lastNodeToProject = node.data.tail;\n                while (nodeToProject) {\n                    if (nodeToProject.dynamicLContainerNode) {\n                        nodeToProject.dynamicLContainerNode.data.renderParent = renderParent;\n                    }\n                    nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                }\n            }\n            node = getNextLNode(node);\n        }\n    }\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex\n * @param elementIndex\n */\nfunction componentRefresh(directiveIndex, elementIndex) {\n    ngDevMode && assertDataInRange(elementIndex);\n    var element = data[elementIndex];\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode && assertDefined(element.data, \"Component's host node should have an LView attached.\");\n    var hostView = element.data;\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView.flags & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, directives);\n        detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view.flags & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var distributedNodes = new Array(noOfNodeBuckets);\n    for (var i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var componentNode = findComponentHost(currentView);\n    var componentChild = getChildLNode(componentNode);\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors && componentChild.tNode) {\n            var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = getNextLNode(componentChild);\n    }\n    ngDevMode && assertDataNext(index);\n    data[index] = distributedNodes;\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n    // `<ng-content>` has no content\n    isParent = false;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var componentNode = findComponentHost(currentView);\n    var componentLView = componentNode.data;\n    var nodesForSelector = componentLView.data[localIndex][selectorIndex];\n    // build the linked list of projected nodes:\n    for (var i = 0; i < nodesForSelector.length; i++) {\n        var nodeToProject = nodesForSelector[i];\n        if (nodeToProject.tNode.type === 1 /* Projection */) {\n            // Reprojecting a projection -> append the list of previously projected nodes\n            var previouslyProjected = nodeToProject.data;\n            appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n        }\n        else {\n            // Projecting a single node\n            appendToProjectionNode(node, nodeToProject, nodeToProject);\n        }\n    }\n    var currentParent = getParentLNode(node);\n    if (canInsertNativeNode(currentParent, currentView)) {\n        ngDevMode && assertNodeType(currentParent, 3 /* Element */);\n        // process each node in the list of projected nodes:\n        var nodeToProject = node.data.head;\n        var lastNodeToProject = node.data.tail;\n        while (nodeToProject) {\n            appendProjectedNode(nodeToProject, currentParent, currentView);\n            nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lView) {\n    var viewRootLNode = lView.node;\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lView.parent, 'lView.parent');\n        lView = lView.parent;\n        viewRootLNode = lView.node;\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return viewRootLNode;\n}\n/**\n * Adds a LView or a LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LView or LContainer should be added\n * @param hostIndex Index of the view's host node in data[]\n * @param state The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(currentView, hostIndex, state) {\n    // TODO(kara): move next and tail properties off of LView\n    if (currentView.tail) {\n        currentView.tail.next = state;\n    }\n    else if (firstTemplatePass) {\n        currentView.tView.childIndex = hostIndex;\n    }\n    currentView.tail = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data.flags & 2 /* CheckAlways */)) {\n        node.data.flags |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(view) {\n    var currentView = view;\n    while (currentView.parent != null) {\n        currentView.flags |= 4 /* Dirty */;\n        currentView = currentView.parent;\n    }\n    currentView.flags |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView.context, 'rootContext');\n    scheduleTick(currentView.context);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tickRootContext(rootContext);\n            res_1(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\n\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        var hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    var lView = lElementNode.view;\n    while (lView.parent) {\n        lView = lView.parent;\n    }\n    return lView;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n    detectChangesInternal(hostNode.data, hostNode, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    var oldView = enterView(hostView, hostNode);\n    var template = hostView.tView.template;\n    try {\n        template(getRenderFlags(hostView), component);\n        refreshView();\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(currentView.bindingIndex, -1, 'Binding index should not yet be set ' + currentView.bindingIndex);\n    if (currentView.tView.bindingStartIndex === -1) {\n        currentView.tView.bindingStartIndex = data.length;\n    }\n    currentView.bindingIndex = currentView.tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    data.length += numSlots;\n    data.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {@link reserveSlots}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    var currentSlot = currentView.bindingIndex;\n    currentView.bindingIndex = currentView.tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n */\nfunction restoreBindingIndex(index) {\n    currentView.bindingIndex = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation bindings with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    if (index >= tData.length) {\n        tData[index] = null;\n    }\n    data[index] = value;\n}\n/** Retrieves a value from the `data`. */\nfunction load(index) {\n    ngDevMode && assertDataInRange(index);\n    return data[index];\n}\n/** Retrieves a value from the `directives` array. */\nfunction loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, directives);\n    return directives[index];\n}\n/** Gets the current binding value and increments the binding index. */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(currentView.bindingIndex);\n    ngDevMode &&\n        assertNotEqual(data[currentView.bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return data[currentView.bindingIndex++];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (currentView.bindingIndex === -1)\n        initBindings();\n    if (currentView.bindingIndex >= data.length) {\n        data[currentView.bindingIndex++] = value;\n    }\n    else if (isDifferent(data[currentView.bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, data[currentView.bindingIndex], value);\n        data[currentView.bindingIndex++] = value;\n    }\n    else {\n        currentView.bindingIndex++;\n        return false;\n    }\n    return true;\n}\n/** Updates binding if changed, then returns the latest value. */\nfunction checkAndUpdateBinding$1(value) {\n    bindingUpdated(value);\n    return value;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(exp1, exp2) {\n    var different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\nfunction getTView() {\n    return currentView.tView;\n}\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in directives[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        var startIndex = currentView.tView.bindingStartIndex - slotOffset;\n        for (var i = 0; i < numSlots; i++) {\n            assertEqual(data[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    var lElementNode = component[NG_HOST_SYMBOL];\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nvar ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = componentType.ngComponentDef;\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var component;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    var rootView = createLView(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView.injector = opts.injector || null;\n    var oldView = enterView(rootView, null);\n    var elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(elementNode.data, elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\nfunction createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component) {\n    var rootContext = getRootView(component).context;\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this.context = context;\n    }\n    /** @internal */\n    ViewRef.prototype._setComponentContext = function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._view.flags & 32 /* Destroyed */) === 32 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._view.flags &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._view.flags |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n    ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n    return ViewRef;\n}());\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, viewNode.data, context) || this;\n        _this._viewContainerRef = null;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    EmbeddedViewRef.prototype.destroy = function () {\n        if (this._viewContainerRef &&\n            (this._view.flags & 8 /* Attached */) === 8 /* Attached */) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        _super.prototype.destroy.call(this);\n    };\n    EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nfunction bloomAdd(injector, type) {\n    var id = type[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    // This means that after 255, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var nodeInjector = node.nodeInjector;\n    var parent = getParentLNode(node);\n    var parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return nodeInjector;\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    var lElement = getPreviousOrParentNode();\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var tElement = lElement.tNode;\n    ngDevMode && assertDefined(tElement, 'expecting tNode');\n    var attrs = tElement.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SELECT_ONLY */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef$1(currentNode.data, context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view.node);\n    }\n    return null;\n}\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var hostNode = getClosestComponentAncestor(currentNode);\n    var hostInjector = hostNode.nodeInjector;\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef$1(hostNode.data, hostNode.view\n            .directives[hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view.node;\n    }\n    return node;\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view.injector;\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095;\n            if (count !== 0) {\n                var start = nodeFlags >> 13;\n                var end = start + count;\n                var defs = node.view.tView.directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return getDirectiveInstance(node.view.directives[i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}\nfunction searchMatchesQueuedForCreation(node, token) {\n    var matches = node.view.tView.currentMatches;\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view.tView);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var id = type[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @returns An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n    while (injector) {\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value = void 0;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef$1(di.node.tNode.type === 0 /* Container */ ? null : di.node.native));\n}\n\n\n\n\n/** A ref to a node's native element. */\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        var vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        var hostParent = getParentLNode(vcRefHost);\n        var lContainer = createLContainer(hostParent, vcRefHost.view, undefined, true);\n        var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, undefined, lContainer, null);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        var hostTNode = vcRefHost.tNode;\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode = createTNode(0 /* Container */, -1, null, null, null, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n        di.viewContainerRef = new ViewContainerRef$1(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    ViewContainerRef.prototype.clear = function () {\n        var lContainer = this._lContainerNode.data;\n        while (lContainer.views.length) {\n            this.remove(0);\n        }\n    };\n    ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n    Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n        get: function () {\n            var lContainer = this._lContainerNode.data;\n            return lContainer.views.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var lViewNode = viewRef._lViewNode;\n        var adjustedIdx = this._adjustIndex(index);\n        viewRef.attachToViewContainerRef(this);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        // invalidate cache of next sibling RNode (we do similar operation in the containerRefreshEnd\n        // instruction)\n        this._lContainerNode.native = undefined;\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n        var index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    };\n    ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n    ViewContainerRef.prototype.remove = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    };\n    ViewContainerRef.prototype.detach = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    };\n    ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n        if (shift === void 0) { shift = 0; }\n        if (index == null) {\n            return this._lContainerNode.data.views.length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data.views.length + 1 + shift, 'index');\n        }\n        return index;\n    };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        var hostNode = di.node;\n        var hostTNode = hostNode.tNode;\n        var hostTView = hostNode.view.tView;\n        if (!hostTNode.tViews) {\n            hostTNode.tViews = createTView(-1, hostNode.data.template, hostTView.directiveRegistry, hostTView.pipeRegistry);\n        }\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data.queries);\n    }\n    return di.templateRef;\n}\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef(elementRef, _tView, _renderer, _queries) {\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    TemplateRef.prototype.createEmbeddedView = function (context) {\n        var viewNode = renderEmbeddedTemplate(null, this._tView, context, this._renderer, this._queries);\n        return new EmbeddedViewRef$1(viewNode, this._tView.template, context);\n    };\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var pipeTypes = componentDefinition.pipes;\n    var directiveTypes = componentDefinition.directives;\n    var def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs),\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null,\n        pipeDefs: pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null,\n        selectors: componentDefinition.selectors\n    };\n    var feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * Creates an NgOnChangesFeature function for a component's features list.\n *\n * It accepts an optional map of minified input property names to original property names,\n * if any input properties have a public alias.\n *\n * The NgOnChangesFeature function that is returned decorates a component with support for\n * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature({name: 'name'})]\n * });\n * ```\n *\n * @param inputPropertyNames Map of input property names, if they are aliased\n * @returns DirectiveDefFeature\n */\nfunction NgOnChangesFeature(inputPropertyNames) {\n    return function (definition) {\n        var inputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (pubKey) {\n            var minKey = inputs[pubKey];\n            var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n            var privateMinKey = PRIVATE_PREFIX + minKey;\n            var originalProperty = Object.getOwnPropertyDescriptor(proto, minKey);\n            var getter = originalProperty && originalProperty.get;\n            var setter = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minKey, {\n                get: getter ||\n                    (setter ? undefined : function () { return this[privateMinKey]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges = {}, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey);\n                    var currentChange = simpleChanges[propertyName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[propertyName] =\n                            new SimpleChange(this[privateMinKey], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey] = value;\n                    }\n                    setter && setter.call(this, value);\n                }\n            });\n        };\n        for (var pubKey in inputs) {\n            _loop_1(pubKey);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    };\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            delegateHook && delegateHook.apply(this);\n        };\n    }\n}\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\nvar EMPTY$1 = {};\n/** Swaps the keys and values of an object. */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var newObj = {};\n    for (var minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver$$1, _super);\n    function ComponentFactoryResolver$$1() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = component.ngComponentDef;\n        return new ComponentFactory$1(componentDef);\n    };\n    return ComponentFactoryResolver$$1;\n}(ComponentFactoryResolver));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nvar ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory$$1, _super);\n    function ComponentFactory$$1(componentDef) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.componentType = componentDef.type;\n        _this.selector = componentDef.selectors[0][0];\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n        ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n        var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n        var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n        // The first index of the first selector is the tag name.\n        var componentTag = this.componentDef.selectors[0][0];\n        var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootView = createLView(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView.injector = ngModule && ngModule.injector || null;\n        // rootView is the parent when bootstrapping\n        var oldView = enterView(rootView, null);\n        var component;\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        // TODO(misko): this is the wrong injector here.\n        return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n    };\n    return ComponentFactory$$1;\n}(ComponentFactory));\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef$$1, _super);\n    function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n        var _this = _super.call(this) || this;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n         * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n         * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n         * given component won't work (as these are always called at the level above a component).\n         *\n         * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n         * component instance. So passing in the root view (1 level above the component) is sufficient.\n         * We might  want to think about creating a fake component for the top level? Or overwrite\n         * detectChanges with a function that calls tickRootContext? */\n        _this.hostView = _this.changeDetectorRef = new ViewRef$1(rootView, instance);\n        _this.injector = injector;\n        _this.location = new ElementRef(hostNode);\n        _this.componentType = componentType;\n        return _this;\n    }\n    ComponentRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    ComponentRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return ComponentRef$$1;\n}(ComponentRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver,\n    useFactory: function () { return new ComponentFactoryResolver$1(); },\n    deps: [],\n};\nvar NgModuleRef$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$$1, _super);\n    function NgModuleRef$$1(ngModuleType, parentInjector) {\n        var _this = _super.call(this) || this;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.destroyCbs = [];\n        var ngModuleDef = ngModuleType.ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        var additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: NgModuleRef,\n                useValue: _this,\n            }\n        ];\n        _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        _this.instance = _this.injector.get(ngModuleType);\n        _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n        return _this;\n    }\n    NgModuleRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$$1;\n}(NgModuleRef));\nvar NgModuleFactory$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory$$1, _super);\n    function NgModuleFactory$$1(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    NgModuleFactory$$1.prototype.create = function (parentInjector) {\n        return new NgModuleRef$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory$$1;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = getCreationMode() ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated(exp) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated2(exp1, exp2);\n    var value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    var value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    var value = different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getTView();\n    var pipeDef;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[index] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(index, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[index];\n    }\n    var pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\nfunction isPure(index) {\n    return getTView().data[index].pure;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n        // mutate parent.\n        if (descend) {\n            this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.child = function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    LQueries_.prototype.container = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    };\n    LQueries_.prototype.addNode = function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    LQueries_.prototype.removeView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var removed = query.containerValues.splice(index, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    var defs = node.view.tView.directives;\n    var flags = node.tNode.flags;\n    var count = flags & 4095;\n    var start = flags >> 13;\n    var end = start + count;\n    for (var i = start; i < end; i++) {\n        var def = defs[i];\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var matchingIdx = getIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view.directives[matchingIdx];\n        }\n    }\n    return null;\n}\nfunction add(query, node) {\n    var nodeInjector = getOrCreateNodeInjectorForNode(node);\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery$1(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten$1(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList$1 = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var queryList = new QueryList$1();\n    var queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(undefined, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (unsafeResourceUrl instanceof String &&\n        unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.Éµangular_packages_core_core_m = APPLICATION_MODULE_PROVIDERS;\nexports.Éµangular_packages_core_core_j = _iterableDiffersFactory;\nexports.Éµangular_packages_core_core_k = _keyValueDiffersFactory;\nexports.Éµangular_packages_core_core_l = _localeFactory;\nexports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\nexports.Éµangular_packages_core_core_g = defaultKeyValueDiffers;\nexports.Éµangular_packages_core_core_h = DefaultIterableDifferFactory;\nexports.Éµangular_packages_core_core_i = DefaultKeyValueDifferFactory;\nexports.Éµangular_packages_core_core_c = ReflectiveInjector_;\nexports.Éµangular_packages_core_core_d = ReflectiveDependency;\nexports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\nexports.Éµangular_packages_core_core_n = wtfEnabled;\nexports.Éµangular_packages_core_core_p = createScope;\nexports.Éµangular_packages_core_core_o = detectWTF;\nexports.Éµangular_packages_core_core_s = endTimeRange;\nexports.Éµangular_packages_core_core_q = leave;\nexports.Éµangular_packages_core_core_r = startTimeRange;\nexports.Éµangular_packages_core_core_w = getOrCreateChangeDetectorRef;\nexports.Éµangular_packages_core_core_y = getOrCreateContainerRef;\nexports.Éµangular_packages_core_core_x = getOrCreateInjectable;\nexports.Éµangular_packages_core_core_v = getOrCreateNodeInjector;\nexports.Éµangular_packages_core_core_z = getOrCreateTemplateRef;\nexports.Éµangular_packages_core_core_ba = bindingUpdated;\nexports.Éµangular_packages_core_core_a = makeParamDecorator;\nexports.Éµangular_packages_core_core_b = makePropDecorator;\nexports.Éµangular_packages_core_core_t = _def;\nexports.Éµangular_packages_core_core_u = DebugContext;\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.defineInjector = defineInjector;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injectable = Injectable;\nexports.inject = inject;\nexports.INJECTOR = INJECTOR;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.createInjector = createInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\nexports.ÉµdevModeEqual = devModeEqual;\nexports.ÉµisListLikeIterable = isListLikeIterable;\nexports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ÉµConsole = Console;\nexports.Éµinject = inject;\nexports.ÉµsetCurrentInjector = setCurrentInjector;\nexports.ÉµAPP_ROOT = APP_ROOT;\nexports.ÉµivyEnabled = ivyEnabled;\nexports.ÉµComponentFactory = ComponentFactory;\nexports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ÉµReflectionCapabilities = ReflectionCapabilities;\nexports.ÉµRenderDebugInfo = RenderDebugInfo;\nexports.Éµ_sanitizeHtml = _sanitizeHtml;\nexports.Éµ_sanitizeStyle = _sanitizeStyle;\nexports.Éµ_sanitizeUrl = _sanitizeUrl;\nexports.Éµglobal = _global;\nexports.ÉµlooseIdentical = looseIdentical;\nexports.Éµstringify = stringify;\nexports.ÉµmakeDecorator = makeDecorator;\nexports.ÉµisObservable = isObservable;\nexports.ÉµisPromise = isPromise;\nexports.ÉµclearOverrides = clearOverrides;\nexports.ÉµoverrideComponentView = overrideComponentView;\nexports.ÉµoverrideProvider = overrideProvider;\nexports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ÉµdefineComponent = defineComponent;\nexports.ÉµdefineDirective = defineDirective;\nexports.ÉµdefinePipe = definePipe;\nexports.ÉµdetectChanges = detectChanges;\nexports.ÉµrenderComponent = renderComponent;\nexports.ÉµdirectiveInject = directiveInject;\nexports.ÉµinjectTemplateRef = injectTemplateRef;\nexports.ÉµinjectViewContainerRef = injectViewContainerRef;\nexports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ÉµinjectAttribute = injectAttribute;\nexports.ÉµPublicFeature = PublicFeature;\nexports.ÉµNgOnChangesFeature = NgOnChangesFeature;\nexports.ÉµmarkDirty = markDirty;\nexports.ÉµNC = NO_CHANGE;\nexports.ÉµC = container;\nexports.ÉµE = elementStart;\nexports.ÉµL = listener;\nexports.ÉµT = text;\nexports.ÉµV = embeddedViewStart;\nexports.ÉµQ = query;\nexports.Éµd = loadDirective;\nexports.ÉµP = projection;\nexports.Éµb = bind;\nexports.Éµi1 = interpolation1;\nexports.Éµi2 = interpolation2;\nexports.Éµi3 = interpolation3;\nexports.Éµi4 = interpolation4;\nexports.Éµi5 = interpolation5;\nexports.Éµi6 = interpolation6;\nexports.Éµi7 = interpolation7;\nexports.Éµi8 = interpolation8;\nexports.ÉµiV = interpolationV;\nexports.Éµpb1 = pipeBind1;\nexports.Éµpb2 = pipeBind2;\nexports.Éµpb3 = pipeBind3;\nexports.Éµpb4 = pipeBind4;\nexports.ÉµpbV = pipeBindV;\nexports.Éµf0 = pureFunction0;\nexports.Éµf1 = pureFunction1;\nexports.Éµf2 = pureFunction2;\nexports.Éµf3 = pureFunction3;\nexports.Éµf4 = pureFunction4;\nexports.Éµf5 = pureFunction5;\nexports.Éµf6 = pureFunction6;\nexports.Éµf7 = pureFunction7;\nexports.Éµf8 = pureFunction8;\nexports.ÉµfV = pureFunctionV;\nexports.ÉµcR = containerRefreshStart;\nexports.Éµcr = containerRefreshEnd;\nexports.ÉµqR = queryRefresh;\nexports.Éµe = elementEnd;\nexports.Éµp = elementProperty;\nexports.ÉµpD = projectionDef;\nexports.ÉµrS = reserveSlots;\nexports.Éµa = elementAttribute;\nexports.Éµs = elementStyle;\nexports.Éµsn = elementStyleNamed;\nexports.Éµk = elementClass;\nexports.Éµkn = elementClassNamed;\nexports.Éµt = textBinding;\nexports.Éµv = embeddedViewEnd;\nexports.Éµst = store;\nexports.Éµld = load;\nexports.ÉµPp = pipe;\nexports.ÉµwhenRendered = whenRendered;\nexports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ÉµsanitizeHtml = sanitizeHtml;\nexports.ÉµsanitizeStyle = sanitizeStyle;\nexports.ÉµsanitizeUrl = sanitizeUrl;\nexports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ÉµregisterModuleFactory = registerModuleFactory;\nexports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\nexports.ÉµEMPTY_MAP = EMPTY_MAP;\nexports.Éµand = anchorDef;\nexports.Éµccf = createComponentFactory;\nexports.Éµcmf = createNgModuleFactory;\nexports.Éµcrt = createRendererType2;\nexports.Éµdid = directiveDef;\nexports.Éµeld = elementDef;\nexports.ÉµelementEventFullName = elementEventFullName;\nexports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ÉµinlineInterpolate = inlineInterpolate;\nexports.Éµinterpolate = interpolate;\nexports.Éµmod = moduleDef;\nexports.Éµmpd = moduleProvideDef;\nexports.Éµncd = ngContentDef;\nexports.Éµnov = nodeValue;\nexports.Éµpid = pipeDef;\nexports.Éµprd = providerDef;\nexports.Éµpad = pureArrayDef;\nexports.Éµpod = pureObjectDef;\nexports.Éµppd = purePipeDef;\nexports.Éµqud = queryDef;\nexports.Éµted = textDef;\nexports.Éµunv = unwrapValue;\nexports.Éµvid = viewDef;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}