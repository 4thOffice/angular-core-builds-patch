{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","compiler","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ÉµChangeDetectorStatus","Directive","dir","type","Component","c","changeDetection","Default","Pipe","pure","NG_BASE_DEF","keys","ngBaseDef","updateBaseDefFromIOProp","getProp","inheritedBaseDef","baseDef","inputs","outputs","declaredInputs","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty$1","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Injectable","preR3InjectableCompile","injectableType","NgModule","ngModule","preR3NgModuleCompile","moduleType","metadata","ngInjectorDef","Version","VERSION","full","major","split","minor","patch","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","add","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","isPromise","isObservable","subscribe","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","Subscription","Subject","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","listener","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","unsubscribe","merge","pipe","share","componentOrFactory","componentFactory","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","list","el","splice","RendererStyleFlags2","RenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","QueryList","dirty","_results","changes","find","toArray","reset","flatten","flat","item","flatItem","last","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ChangeDetectorRef","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","attributes","classes","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","node","triggerEventHandler","eventObj","element","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","componentResourceResolutionQueue","componentNeedsResolution","styleUrls","unwrapResponse","response","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_c","e_1_1","return","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","subscription","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","prefix","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tNode","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","document","stringify$1","loadInternal","readElementValue","getNextLNode","getChildLNode","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","renderParentNode","beforeNode","projectionNodeIndex","native","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","createTextNode","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","lView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","getRenderParent","appendProjectedNode","currentParent","lContainer","ngContainerChild","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","getValue","currFlag","getPointers","hasValueChanged","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setContextDirty","store","DashCase","removeProperty","setClass","isDirtyYes","adjustedIndex","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$2","getRenderer","getRendererFactory","previousOrParentNode","isParent","currentQueries","currentElementNode","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","enterView","newView","host","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","setHostBindings","hostBindings","refreshChildComponents","componentRefresh","defs","dirIndex","executeInitAndContentHooks","createLViewData","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElementNS","cacheMatchingDirectivesForNode","exportsMap","","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","isContentQueryHost","clone","tDirectives","directiveCreate","saveResolvedLocalsInData","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","bindingStartIndex","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","tag","rNode","directiveDefs","pipeDefs","onPush","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","storeCleanupWithContext","addNode","elementAttribute","NO_CHANGE","element_1","loadElement","strValue","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","valueToAdd","elementStylingMap","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","classesStartIndex","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","baseDirectiveCreate","addComponentLogic","directiveIndex","addToViewTree","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","createLContainer","parentLNode","isForViewContainerRef","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","interpolationV","different","interpolation1","interpolation2","i0","bindingUpdated2","interpolation3","i1","interpolation4","i2","bindingUpdated4","interpolation5","i3","interpolation6","i4","interpolation7","i5","interpolation8","i6","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","consumeBinding","isDifferent","throwErrorIfNoChangesMode","checkAndUpdateBinding$1","exp1","exp2","exp3","exp4","getTView","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","EMPTY$1","EMPTY_ARRAY$3","_renderCompCount$1","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","InheritDefinitionFeature","definition","superType","getSuperType","_loop_1","superDef","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ViewRef$1","_lViewNode","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","componentDef","isInternalRootView","wrapper","elementNode","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","ComponentRef$1","ComponentRef$$1","destroyCbs","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectAttribute","attrNameToInject","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","adjustedIdx","_adjustIndex","newIndex","shift","TemplateRef$1","getFactoryOf","getInheritedFactory","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewNode","declarationView","queries","PublicFeature","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","i18nTagRegex","appendI18nNode","previousNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","pipeBind2","pipeBind3","pipeBind4","pipeBindV","LQueries_","shallow","deep","track","descend","createQuery$1","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten$1","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","sanitizeHtml","HTML","sanitizeStyle","unsafeStyle","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","Éµa","Éµb","ÉµC","Éµx","ÉµcR","Éµcr","Éµd","Éµql","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","ÉµgV","ÉµrV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµcp","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµQr","ÉµrS","Éµr","Éµs","Éµsm","Éµsp","Éµsa","ÉµT","Éµt","ÉµV","Éµv","Éµzh","Éµzs","Éµzss","Éµzr","Éµzc","sanitizeScript","unsafeScript","SCRIPT","Éµzu","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$4","patchComponentDefWithScope","transitiveScopes","compilation","flatten$2","out","expandModuleWithProviders","isModuleWithProviders","wrapReference","isNgModule","directiveMetadata","extractHostBindings","parseHostBindings","_loop_2","field","ann","isHostBinding","isHostListener","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_w","Éµangular_packages_core_core_z","Éµangular_packages_core_core_y","Éµangular_packages_core_core_x","Éµangular_packages_core_core_v","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_be","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNC","Éµst","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI1","i18nInterpolation1","ÉµiI2","i18nInterpolation2","ÉµiI3","i18nInterpolation3","idx","ÉµiI4","i18nInterpolation4","b1","ÉµiI5","i18nInterpolation5","ÉµiI6","i18nInterpolation6","ÉµiI7","i18nInterpolation7","b2","ÉµiI8","i18nInterpolation8","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","compileNgModuleDefs","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","ÉµpatchComponentDefWithScope","ÉµcompileComponent","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","scopes","transitiveScopesFor","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","ÉµcompileDirective","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","ÉµcompilePipe","compilePipe","compilePipeFromMetadata","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµsanitizeUrl","ÉµsanitizeResourceUrl","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.1+48.sha-b5f354f\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@angular/compiler')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators', '@angular/compiler'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators,global.ng.compiler));\n}(this, (function (exports,rxjs,operators,compiler) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = false;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (function () { })(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (function () { })(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (function () { })(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Used to get the minified alias of ngBaseDef\n     */\n    var NG_BASE_DEF = Object.keys({ ngBaseDef: true })[0];\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty$1(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var Éµ0$2 = GET_PROPERTY_NAME$1;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return (preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.1+48.sha-b5f354f');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n        ]; };\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.decorators = [\n            { type: Injectable }\n        ];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.decorators = [\n            { type: Injectable }\n        ];\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = function () { return [\n            { type: NgZone }\n        ]; };\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = function () { return []; };\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        PlatformRef.ctorParameters = function () { return [\n            { type: Injector }\n        ]; };\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationRef.ctorParameters = function () { return [\n            { type: NgZone },\n            { type: Console },\n            { type: Injector },\n            { type: ErrorHandler },\n            { type: ComponentFactoryResolver },\n            { type: ApplicationInitStatus }\n        ]; };\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = function () { return [\n            { type: Compiler },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n        ]; };\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = function () { return [\n            { type: ApplicationRef }\n        ]; };\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            debugger;\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // NOTE: The order here matters: Checking window, then global, then self is important.\n    //   checking them in another order can result in errors in some Node environments.\n    var __global$1 = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n        typeof self != 'undefined' && self;\n    function ngDevModeResetPerfCounters() {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        return __global$1['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        __global$1['ngDevMode'] = ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten$1(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reason:\n     * - view is not inserted into any container (view was created but not iserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view this view was inserted into a container and\n     * the container itself has it render parent determined.\n     */\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                while (grandParent.tNode.type === 4 /* ElementContainer */) {\n                    grandParent = getParentLNode(grandParent);\n                }\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        else if (node.tNode.type === 4 /* ElementContainer */) {\n            var ngContainerChild = getChildLNode(node);\n            while (ngContainerChild) {\n                appendProjectedNode(ngContainerChild, currentParent, currentView, renderParent);\n                ngContainerChild = getNextLNode(ngContainerChild);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$2 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    var currentElementNode = null;\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var tNode = previousOrParentNode.tNode;\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentNode.data !== viewData && !isContentQueryHost(tNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            tNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData ? viewData[INJECTOR$1] : null,\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n            null // declarationView\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentNode = null;\n                oldView = enterView(viewNode.data, viewNode);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentNode = _previousOrParentNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 4 /* ElementContainer */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$2;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$2) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(tNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        ngDevMode && assertNodeOfPossibleTypes(previousOrParentNode, 3 /* Element */);\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        // check if a given container node matches\n        currentQueries && (currentQueries = currentQueries.addNode(node));\n        queueLifecycleHooks(node.tNode.flags, tView);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDescendantViews();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding$1(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef);\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY$3 = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY$3);\n    }\n    var _renderCompCount$1 = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation;\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || EMPTY$1,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation == null ? 2 /* ViewEncapsulation.None */ : encapsulation,\n            id: \"c\" + _renderCompCount$1++,\n            styles: EMPTY_ARRAY$3,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$3,\n            declarations: def.declarations || EMPTY_ARRAY$3,\n            imports: def.imports || EMPTY_ARRAY$3,\n            exports: def.exports || EMPTY_ARRAY$3,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef);\n                rootContext.components.push(component);\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef$1(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef$1(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer);\n            appendChild(hostParent, comment, vcRefHost.view);\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = typeAny.ngComponentDef || typeAny.ngDirectiveDef || typeAny.ngPipeDef ||\n            typeAny.ngInjectableDef || typeAny.ngInjectorDef;\n        if (def === undefined || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this.elementRef = elementRef;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef$1(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (directive[NG_HOST_SYMBOL] === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var different = bindingUpdated2(v0, v1);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.deep, node);\n            if (isContentQueryHost(node.tNode)) {\n                add(this.shallow, node);\n                if (node.tNode.parent && isContentQueryHost(node.tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, node);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(node.tNode) && add(this.shallow, node);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 15 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery$1(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten$1(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList$1 = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList$1();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'Éµx': nextContext,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'Éµql': loadQueryList,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'ÉµgV': getCurrentView,\n        'ÉµrV': restoreView,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµcp': elementClassProp,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµQr': registerContentQuery,\n        'ÉµrS': reserveSlots,\n        'Éµr': reference,\n        'Éµs': elementStyling,\n        'Éµsm': elementStylingMap,\n        'Éµsp': elementStyleProp,\n        'Éµsa': elementStylingApply,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n        'Éµzh': sanitizeHtml,\n        'Éµzs': sanitizeStyle,\n        'Éµzss': defaultStyleSanitizer,\n        'Éµzr': sanitizeResourceUrl,\n        'Éµzc': sanitizeScript,\n        'Éµzu': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4).map(wrap),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$4),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$4,\n                            ngModule.exports || EMPTY_ARRAY$4,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_i = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_j = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_h = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_m = wtfEnabled;\n    exports.Éµangular_packages_core_core_o = createScope;\n    exports.Éµangular_packages_core_core_n = detectWTF;\n    exports.Éµangular_packages_core_core_r = endTimeRange;\n    exports.Éµangular_packages_core_core_p = leave;\n    exports.Éµangular_packages_core_core_q = startTimeRange;\n    exports.Éµangular_packages_core_core_w = getOrCreateChangeDetectorRef;\n    exports.Éµangular_packages_core_core_z = getOrCreateContainerRef;\n    exports.Éµangular_packages_core_core_y = getOrCreateElementRef;\n    exports.Éµangular_packages_core_core_x = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_v = getOrCreateNodeInjector;\n    exports.Éµangular_packages_core_core_ba = getOrCreateTemplateRef;\n    exports.Éµangular_packages_core_core_bb = bindingUpdated;\n    exports.Éµangular_packages_core_core_be = loadInternal;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_s = _def;\n    exports.Éµangular_packages_core_core_t = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_u = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.Éµx = nextContext;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµgV = getCurrentView;\n    exports.ÉµrV = restoreView;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.Éµr = reference;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStylingMap;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµcp = elementClassProp;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI1 = i18nInterpolation1;\n    exports.ÉµiI2 = i18nInterpolation2;\n    exports.ÉµiI3 = i18nInterpolation3;\n    exports.ÉµiI4 = i18nInterpolation4;\n    exports.ÉµiI5 = i18nInterpolation5;\n    exports.ÉµiI6 = i18nInterpolation6;\n    exports.ÉµiI7 = i18nInterpolation7;\n    exports.ÉµiI8 = i18nInterpolation8;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}